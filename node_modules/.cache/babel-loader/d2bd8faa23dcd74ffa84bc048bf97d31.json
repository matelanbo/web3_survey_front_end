{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEthers, useEtherBalance } from \"@usedapp/core\";\nimport { constants, utils } from \"ethers\";\nimport networkMapping from \"../chain-info/deployments/map.json\";\nimport MainRouter from \"../chain-info/contracts/MainRouter.json\";\nimport { Contract } from \"@ethersproject/contracts\";\nexport const useMyCreatedQuestions = tokenAddress => {\n  _s();\n\n  // address\n  // abi\n  // chainId\n  const {\n    abi\n  } = MainRouter;\n  const {\n    account,\n    chainId\n  } = useEthers();\n  const balance = useEtherBalance(account);\n  const tokenFarmAddress = chainId ? networkMapping[\"4\"][\"MainRouter\"][0] : constants.AddressZero;\n  const tokenFarmInterface = new utils.Interface(abi);\n  const tokenFarmContract = new Contract(tokenFarmAddress, tokenFarmInterface); // Check Rewards\n\n  console.log(\"my account\", balance, chainId);\n  console.log(\"in\", tokenFarmAddress); //   const { value: myCreatedQuestions } =\n  //       useCall({\n  //           contract: tokenFarmContract,\n  //           method: 'getMyCreatedQuestions',\n  //           args: [account]\n  //       }) ?? {}\n  //   console.log(\"out\", myCreatedQuestions[2])\n  //   return myCreatedQuestions?.[0]\n};\n\n_s(useMyCreatedQuestions, \"eMvsgL4alsBoXaKEd7s4UNT0DJo=\", false, function () {\n  return [useEthers, useEtherBalance];\n});","map":{"version":3,"names":["useEthers","useEtherBalance","constants","utils","networkMapping","MainRouter","Contract","useMyCreatedQuestions","tokenAddress","abi","account","chainId","balance","tokenFarmAddress","AddressZero","tokenFarmInterface","Interface","tokenFarmContract","console","log"],"sources":["/Users/qianyisheng/Desktop/web3/brownie_test/brownie_fund_me/front_end/src/hooks/useMyCreatedQuestions.tsx"],"sourcesContent":["import { useEthers, useCall, useEtherBalance } from \"@usedapp/core\"\nimport { constants, utils } from \"ethers\"\nimport networkMapping from \"../chain-info/deployments/map.json\"\nimport MainRouter from \"../chain-info/contracts/MainRouter.json\"\nimport { Contract } from \"@ethersproject/contracts\"\n\nexport const useMyCreatedQuestions = (tokenAddress: string) => {\n    // address\n    // abi\n    // chainId\n    const { abi } = MainRouter\n    const { account, chainId } = useEthers()\n    const balance = useEtherBalance(account)\n    const tokenFarmAddress = chainId ? networkMapping[\"4\"][\"MainRouter\"][0] : constants.AddressZero\n    const tokenFarmInterface = new utils.Interface(abi)\n    const tokenFarmContract = new Contract(tokenFarmAddress, tokenFarmInterface)\n\n    // Check Rewards\n    console.log(\"my account\", balance, chainId)\n    console.log(\"in\", tokenFarmAddress)\n    //   const { value: myCreatedQuestions } =\n    //       useCall({\n    //           contract: tokenFarmContract,\n    //           method: 'getMyCreatedQuestions',\n    //           args: [account]\n    //       }) ?? {}\n    //   console.log(\"out\", myCreatedQuestions[2])\n    //   return myCreatedQuestions?.[0]\n\n}"],"mappings":";;AAAA,SAASA,SAAT,EAA6BC,eAA7B,QAAoD,eAApD;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,QAAjC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,OAAO,MAAMC,qBAAqB,GAAIC,YAAD,IAA0B;EAAA;;EAC3D;EACA;EACA;EACA,MAAM;IAAEC;EAAF,IAAUJ,UAAhB;EACA,MAAM;IAAEK,OAAF;IAAWC;EAAX,IAAuBX,SAAS,EAAtC;EACA,MAAMY,OAAO,GAAGX,eAAe,CAACS,OAAD,CAA/B;EACA,MAAMG,gBAAgB,GAAGF,OAAO,GAAGP,cAAc,CAAC,GAAD,CAAd,CAAoB,YAApB,EAAkC,CAAlC,CAAH,GAA0CF,SAAS,CAACY,WAApF;EACA,MAAMC,kBAAkB,GAAG,IAAIZ,KAAK,CAACa,SAAV,CAAoBP,GAApB,CAA3B;EACA,MAAMQ,iBAAiB,GAAG,IAAIX,QAAJ,CAAaO,gBAAb,EAA+BE,kBAA/B,CAA1B,CAT2D,CAW3D;;EACAG,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BP,OAA1B,EAAmCD,OAAnC;EACAO,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBN,gBAAlB,EAb2D,CAc3D;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEH,CAvBM;;GAAMN,qB;UAKoBP,S,EACbC,e"},"metadata":{},"sourceType":"module"}
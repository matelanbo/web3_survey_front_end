{"ast":null,"code":"import { useEffect } from 'react';\nimport { useEthers } from '../../../hooks';\nimport { notifyDevtools } from '../../devtools';\nexport function useDevtoolsReporting(uniqueCallsJSON, uniqueCalls, blockNumber, multicallAddresses) {\n  const {\n    chainId,\n    account,\n    error\n  } = useEthers();\n  const multicall = chainId !== undefined ? multicallAddresses[chainId] : undefined;\n  useEffect(() => {\n    notifyDevtools({\n      type: 'NETWORK_CHANGED',\n      chainId,\n      multicallAddress: multicall\n    });\n  }, [chainId, multicall]);\n  useEffect(() => {\n    notifyDevtools({\n      type: 'ACCOUNT_CHANGED',\n      address: account !== null && account !== void 0 ? account : undefined\n    });\n  }, [account]);\n  useEffect(() => {\n    notifyDevtools({\n      type: 'CALLS_CHANGED',\n      chainId,\n      calls: uniqueCalls\n    });\n  }, [uniqueCallsJSON]);\n  useEffect(() => {\n    if (chainId !== undefined && blockNumber !== undefined) {\n      notifyDevtools({\n        type: 'BLOCK_NUMBER_CHANGED',\n        chainId,\n        blockNumber\n      });\n    }\n  }, [blockNumber, chainId]);\n  useEffect(() => {\n    if (error !== undefined) {\n      notifyDevtools({\n        type: 'GENERIC_ERROR',\n        error\n      });\n    }\n  }, [error]);\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAGA,OAAM,SAAUC,oBAAV,CACJC,eADI,EAEJC,WAFI,EAGJC,WAHI,EAIJC,kBAJI,EAI6C;EAEjD,MAAM;IAAEC,OAAF;IAAWC,OAAX;IAAoBC;EAApB,IAA8BT,SAAS,EAA7C;EAEA,MAAMU,SAAS,GAAGH,OAAO,KAAKI,SAAZ,GAAwBL,kBAAkB,CAACC,OAAD,CAA1C,GAAsDI,SAAxE;EAEAZ,SAAS,CAAC,MAAK;IACbE,cAAc,CAAC;MAAEW,IAAI,EAAE,iBAAR;MAA2BL,OAA3B;MAAoCM,gBAAgB,EAAEH;IAAtD,CAAD,CAAd;EACD,CAFQ,EAEN,CAACH,OAAD,EAAUG,SAAV,CAFM,CAAT;EAIAX,SAAS,CAAC,MAAK;IACbE,cAAc,CAAC;MAAEW,IAAI,EAAE,iBAAR;MAA2BE,OAAO,EAAEN,OAAO,SAAP,WAAO,WAAP,aAAWG;IAA/C,CAAD,CAAd;EACD,CAFQ,EAEN,CAACH,OAAD,CAFM,CAAT;EAIAT,SAAS,CAAC,MAAK;IACbE,cAAc,CAAC;MAAEW,IAAI,EAAE,eAAR;MAAyBL,OAAzB;MAAkCQ,KAAK,EAAEX;IAAzC,CAAD,CAAd;EACD,CAFQ,EAEN,CAACD,eAAD,CAFM,CAAT;EAIAJ,SAAS,CAAC,MAAK;IACb,IAAIQ,OAAO,KAAKI,SAAZ,IAAyBN,WAAW,KAAKM,SAA7C,EAAwD;MACtDV,cAAc,CAAC;QAAEW,IAAI,EAAE,sBAAR;QAAgCL,OAAhC;QAAyCF;MAAzC,CAAD,CAAd;IACD;EACF,CAJQ,EAIN,CAACA,WAAD,EAAcE,OAAd,CAJM,CAAT;EAMAR,SAAS,CAAC,MAAK;IACb,IAAIU,KAAK,KAAKE,SAAd,EAAyB;MACvBV,cAAc,CAAC;QAAEW,IAAI,EAAE,eAAR;QAAyBH;MAAzB,CAAD,CAAd;IACD;EACF,CAJQ,EAIN,CAACA,KAAD,CAJM,CAAT;AAKD","names":["useEffect","useEthers","notifyDevtools","useDevtoolsReporting","uniqueCallsJSON","uniqueCalls","blockNumber","multicallAddresses","chainId","account","error","multicall","undefined","type","multicallAddress","address","calls"],"sources":["/Users/qianyisheng/Desktop/web3/brownie_test/web3_survey/front_end/node_modules/@usedapp/core/src/providers/chainState/common/useDevtoolsReporting.ts"],"sourcesContent":["import { useEffect } from 'react'\nimport { useEthers } from '../../../hooks'\nimport { notifyDevtools } from '../../devtools'\nimport { RawCall } from './callsReducer'\n\nexport function useDevtoolsReporting(\n  uniqueCallsJSON: string,\n  uniqueCalls: RawCall[],\n  blockNumber: number | undefined,\n  multicallAddresses: { [network: string]: string }\n) {\n  const { chainId, account, error } = useEthers()\n\n  const multicall = chainId !== undefined ? multicallAddresses[chainId] : undefined\n\n  useEffect(() => {\n    notifyDevtools({ type: 'NETWORK_CHANGED', chainId, multicallAddress: multicall })\n  }, [chainId, multicall])\n\n  useEffect(() => {\n    notifyDevtools({ type: 'ACCOUNT_CHANGED', address: account ?? undefined })\n  }, [account])\n\n  useEffect(() => {\n    notifyDevtools({ type: 'CALLS_CHANGED', chainId, calls: uniqueCalls })\n  }, [uniqueCallsJSON])\n\n  useEffect(() => {\n    if (chainId !== undefined && blockNumber !== undefined) {\n      notifyDevtools({ type: 'BLOCK_NUMBER_CHANGED', chainId, blockNumber })\n    }\n  }, [blockNumber, chainId])\n\n  useEffect(() => {\n    if (error !== undefined) {\n      notifyDevtools({ type: 'GENERIC_ERROR', error })\n    }\n  }, [error])\n}\n"]},"metadata":{},"sourceType":"module"}
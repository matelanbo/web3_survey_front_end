{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEthers, useContractFunction } from \"@usedapp/core\";\nimport { constants, utils } from \"ethers\";\nimport MainRouter from \"../chain-info/contracts/MainRouter.json\";\nimport { Contract } from \"@ethersproject/contracts\";\nexport const useRewardsCheck = () => {\n  _s();\n\n  // address\n  // abi\n  // chainId\n  const {\n    chainId\n  } = useEthers();\n  const {\n    abi\n  } = MainRouter;\n  const tokenFarmAddress = constants.AddressZero;\n  const tokenFarmInterface = new utils.Interface(abi);\n  const tokenFarmContract = new Contract(tokenFarmAddress, tokenFarmInterface); // stake\n\n  const {\n    send: rewardsCheck,\n    state: rewardsCheckState\n  } = useContractFunction(tokenFarmContract, \"myRewards\", {\n    transactionName: \"Check Rewards\"\n  });\n  const myRewards = rewardsCheck();\n  console.log(myRewards);\n};\n\n_s(useRewardsCheck, \"o/cSD5C8ARlFIyixyqlycodQbQA=\", false, function () {\n  return [useEthers, useContractFunction];\n});","map":{"version":3,"names":["useEthers","useContractFunction","constants","utils","MainRouter","Contract","useRewardsCheck","chainId","abi","tokenFarmAddress","AddressZero","tokenFarmInterface","Interface","tokenFarmContract","send","rewardsCheck","state","rewardsCheckState","transactionName","myRewards","console","log"],"sources":["/Users/qianyisheng/Desktop/web3/brownie_test/brownie_fund_me/front_end/src/hooks/useRewardsCheck.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useEthers, useContractFunction } from \"@usedapp/core\"\nimport { constants, utils } from \"ethers\"\nimport MainRouter from \"../chain-info/contracts/MainRouter.json\"\nimport { Contract } from \"@ethersproject/contracts\"\n\nexport const useRewardsCheck = () => {\n    // address\n    // abi\n    // chainId\n    const { chainId } = useEthers()\n    const { abi } = MainRouter\n    const tokenFarmAddress = constants.AddressZero\n    const tokenFarmInterface = new utils.Interface(abi)\n    const tokenFarmContract = new Contract(tokenFarmAddress, tokenFarmInterface)\n\n\n    // stake\n    const { send: rewardsCheck, state: rewardsCheckState } =\n        useContractFunction(tokenFarmContract, \"myRewards\", {\n            transactionName: \"Check Rewards\",\n        })\n    const myRewards = rewardsCheck()\n    console.log(myRewards)\n\n}"],"mappings":";;AACA,SAASA,SAAT,EAAoBC,mBAApB,QAA+C,eAA/C;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,QAAjC;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;EAAA;;EACjC;EACA;EACA;EACA,MAAM;IAAEC;EAAF,IAAcP,SAAS,EAA7B;EACA,MAAM;IAAEQ;EAAF,IAAUJ,UAAhB;EACA,MAAMK,gBAAgB,GAAGP,SAAS,CAACQ,WAAnC;EACA,MAAMC,kBAAkB,GAAG,IAAIR,KAAK,CAACS,SAAV,CAAoBJ,GAApB,CAA3B;EACA,MAAMK,iBAAiB,GAAG,IAAIR,QAAJ,CAAaI,gBAAb,EAA+BE,kBAA/B,CAA1B,CARiC,CAWjC;;EACA,MAAM;IAAEG,IAAI,EAAEC,YAAR;IAAsBC,KAAK,EAAEC;EAA7B,IACFhB,mBAAmB,CAACY,iBAAD,EAAoB,WAApB,EAAiC;IAChDK,eAAe,EAAE;EAD+B,CAAjC,CADvB;EAIA,MAAMC,SAAS,GAAGJ,YAAY,EAA9B;EACAK,OAAO,CAACC,GAAR,CAAYF,SAAZ;AAEH,CAnBM;;GAAMb,e;UAIWN,S,EAShBC,mB"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/qianyisheng/Desktop/web3/brownie_test/brownie_fund_me/front_end/src/Components/yourWallet/StakeForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useEthers, useTokenBalance, useNotifications } from \"@usedapp/core\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { Button, Input, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { useStakeTokens } from \"../../hooks\";\nimport { utils } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const StakeForm = _ref => {\n  _s();\n\n  let {\n    token\n  } = _ref;\n  const {\n    address: tokenAddress,\n    name\n  } = token;\n  const {\n    account\n  } = useEthers();\n  const tokenBalance = useTokenBalance(tokenAddress, account);\n  const formattedTokenBalance = tokenBalance ? parseFloat(formatUnits(tokenBalance, 18)) : 0;\n  const {\n    notifications\n  } = useNotifications();\n  const [amount, setAmount] = useState(0);\n\n  const handleInputChange = event => {\n    const newAmount = event.target.value === \"\" ? \"\" : Number(event.target.value);\n    setAmount(newAmount);\n    console.log(newAmount);\n  };\n\n  const {\n    approveAndStake,\n    state: approveAndStakeErc20State\n  } = useStakeTokens(tokenAddress);\n\n  const handleStakeSubmit = () => {\n    const amountAsWei = utils.parseEther(amount.toString());\n    return approveAndStake(amountAsWei.toString());\n  };\n\n  const isMining = approveAndStakeErc20State.status === \"Mining\";\n  const [showErc20ApprovalSuccess, setShowErc20ApprovalSuccess] = useState(false);\n  const [showStakeTokenSuccess, setShowStakeTokenSuccess] = useState(false);\n\n  const handleCloseSnack = () => {\n    setShowErc20ApprovalSuccess(false);\n    setShowStakeTokenSuccess(false);\n  };\n\n  useEffect(() => {\n    if (notifications.filter(notification => notification.type === \"transactionSucceed\" && notification.transactionName === \"Approve ERC20 transfer\").length > 0) {\n      setShowErc20ApprovalSuccess(true);\n      setShowStakeTokenSuccess(false);\n    }\n\n    if (notifications.filter(notification => notification.type === \"transactionSucceed\" && notification.transactionName === \"Stake Tokens\").length > 0) {\n      setShowErc20ApprovalSuccess(false);\n      setShowStakeTokenSuccess(true);\n    }\n  }, [notifications, showErc20ApprovalSuccess, showStakeTokenSuccess]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleStakeSubmit,\n        color: \"primary\",\n        size: \"large\",\n        disabled: isMining,\n        children: isMining ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 26\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }, this) : \"Stake!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: showErc20ApprovalSuccess,\n      autoHideDuration: 5000,\n      onClose: handleCloseSnack,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnack,\n        severity: \"success\",\n        children: \"ERC-20 token transfer approved! Now approve the 2nd transaction.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: showStakeTokenSuccess,\n      autoHideDuration: 5000,\n      onClose: handleCloseSnack,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnack,\n        severity: \"success\",\n        children: \"Tokens Staked!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(StakeForm, \"CSGuiqR4YFoVLHJl4xBxGR7hcG0=\", false, function () {\n  return [useEthers, useTokenBalance, useNotifications, useStakeTokens];\n});\n\n_c = StakeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StakeForm\");","map":{"version":3,"names":["React","useState","useEffect","useEthers","useTokenBalance","useNotifications","formatUnits","Button","Input","CircularProgress","Snackbar","Alert","useStakeTokens","utils","StakeForm","token","address","tokenAddress","name","account","tokenBalance","formattedTokenBalance","parseFloat","notifications","amount","setAmount","handleInputChange","event","newAmount","target","value","Number","console","log","approveAndStake","state","approveAndStakeErc20State","handleStakeSubmit","amountAsWei","parseEther","toString","isMining","status","showErc20ApprovalSuccess","setShowErc20ApprovalSuccess","showStakeTokenSuccess","setShowStakeTokenSuccess","handleCloseSnack","filter","notification","type","transactionName","length"],"sources":["/Users/qianyisheng/Desktop/web3/brownie_test/brownie_fund_me/front_end/src/Components/yourWallet/StakeForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Token } from \"../Main\"\nimport { useEthers, useTokenBalance, useNotifications } from \"@usedapp/core\"\nimport { formatUnits } from \"@ethersproject/units\"\nimport { Button, Input, CircularProgress, Snackbar } from \"@material-ui/core\"\nimport Alert from \"@material-ui/lab/Alert\"\nimport { useStakeTokens } from \"../../hooks\"\nimport { utils } from \"ethers\"\n\nexport interface StakeFormProps {\n    token: Token\n}\n\nexport const StakeForm = ({ token }: StakeFormProps) => {\n    const { address: tokenAddress, name } = token\n    const { account } = useEthers()\n    const tokenBalance = useTokenBalance(tokenAddress, account)\n    const formattedTokenBalance: number = tokenBalance ? parseFloat(formatUnits(tokenBalance, 18)) : 0\n    const { notifications } = useNotifications()\n\n    const [amount, setAmount] = useState<number | string | Array<number | string>>(0)\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newAmount = event.target.value === \"\" ? \"\" : Number(event.target.value)\n        setAmount(newAmount)\n        console.log(newAmount)\n    }\n\n    const { approveAndStake, state: approveAndStakeErc20State } = useStakeTokens(tokenAddress)\n    const handleStakeSubmit = () => {\n        const amountAsWei = utils.parseEther(amount.toString())\n        return approveAndStake(amountAsWei.toString())\n    }\n\n    const isMining = approveAndStakeErc20State.status === \"Mining\"\n    const [showErc20ApprovalSuccess, setShowErc20ApprovalSuccess] = useState(false)\n    const [showStakeTokenSuccess, setShowStakeTokenSuccess] = useState(false)\n    const handleCloseSnack = () => {\n        setShowErc20ApprovalSuccess(false)\n        setShowStakeTokenSuccess(false)\n    }\n\n    useEffect(() => {\n        if (notifications.filter(\n            (notification) =>\n                notification.type === \"transactionSucceed\" &&\n                notification.transactionName === \"Approve ERC20 transfer\").length > 0) {\n            setShowErc20ApprovalSuccess(true)\n            setShowStakeTokenSuccess(false)\n        }\n        if (notifications.filter(\n            (notification) =>\n                notification.type === \"transactionSucceed\" &&\n                notification.transactionName === \"Stake Tokens\"\n        ).length > 0) {\n            setShowErc20ApprovalSuccess(false)\n            setShowStakeTokenSuccess(true)\n        }\n    }, [notifications, showErc20ApprovalSuccess, showStakeTokenSuccess])\n\n    return (\n        <>\n            <div>\n                <Input\n                    onChange={handleInputChange} />\n                <Button\n                    onClick={handleStakeSubmit}\n                    color=\"primary\"\n                    size=\"large\"\n                    disabled={isMining}>\n                    {isMining ? <CircularProgress size={26} /> : \"Stake!!!\"}\n                </Button>\n            </div>\n            <Snackbar\n                open={showErc20ApprovalSuccess}\n                autoHideDuration={5000}\n                onClose={handleCloseSnack}\n            >\n                <Alert onClose={handleCloseSnack} severity=\"success\">\n                    ERC-20 token transfer approved! Now approve the 2nd transaction.\n                </Alert>\n            </Snackbar>\n            <Snackbar\n                open={showStakeTokenSuccess}\n                autoHideDuration={5000}\n                onClose={handleCloseSnack}>\n                <Alert onClose={handleCloseSnack} severity=\"success\">\n                    Tokens Staked!\n                </Alert>\n            </Snackbar>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/qianyisheng/Desktop/web3/brownie_test/brownie_fund_me/front_end/src/Components/yourWallet/StakeForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useEthers, useTokenBalance } from \"@usedapp/core\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { Button, CircularProgress } from \"@material-ui/core\";\nimport { useStakeTokens, useAnswer, useClaimRewards } from \"../../hooks\";\nimport { utils } from \"ethers\";\nimport { WalletBalance } from \"./WalletBalance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const StakeForm = _ref => {\n  _s();\n\n  let {\n    token\n  } = _ref;\n  const {\n    address: tokenAddress,\n    name\n  } = token;\n  const {\n    account\n  } = useEthers();\n  const tokenBalance = useTokenBalance(tokenAddress, account);\n  const formattedTokenBalance = tokenBalance ? parseFloat(formatUnits(tokenBalance, 18)) : 0;\n  const [rewardsToAssign, setRewardsToAssign] = useState(0);\n  const [maxAnswers, setMaxAnswers] = useState(0);\n  const [deadline, setDeadline] = useState(0);\n\n  const handleInputChangeRewardsToAssign = event => {\n    const rewardsToAssign = event.target.value === \"\" ? \"\" : Number(event.target.value);\n    setRewardsToAssign(rewardsToAssign);\n    console.log(rewardsToAssign);\n  };\n\n  const handleInputChangeMaxAnswers = event => {\n    const maxAnswers = event.target.value === \"\" ? \"\" : Number(event.target.value);\n    setMaxAnswers(maxAnswers);\n    console.log(maxAnswers);\n  };\n\n  const handleInputChangeDeadline = event => {\n    const deadline = event.target.value === \"\" ? \"\" : Number(event.target.value);\n    setDeadline(deadline);\n    console.log(deadline);\n  };\n\n  const {\n    approveAndStake,\n    state: approveAndStakeErc20State\n  } = useStakeTokens(tokenAddress);\n  console.log(\"here is rewards to assign:\", rewardsToAssign);\n\n  const handleQuestionnaireCreation = () => {\n    console.log(\"here is rewards to assign:\");\n    const rewardsToAssignAsWei = utils.parseEther(rewardsToAssign.toString());\n    console.log(\"here is rewards to assign:\", rewardsToAssignAsWei);\n    return approveAndStake(rewardsToAssignAsWei.toString());\n  };\n\n  const handleQuestionnaireCreationTest = () => {\n    console.log(\"test\");\n  }; //  const rewards = useRewardsCheck(tokenAddress)\n\n\n  const rewards = 100000000000;\n  const formattedRewards = rewards ? parseFloat(formatUnits(rewards, 18)) : 0;\n  const {\n    answerQuestions,\n    state: answerState\n  } = useAnswer(\"0\");\n\n  const handleAnswer = () => {\n    console.log(\"answerd\");\n    answerQuestions();\n  };\n\n  const {\n    claimRewards,\n    state: claimRewardsState\n  } = useClaimRewards(\"0\");\n\n  const handleClaimRewards = () => {\n    console.log(\"rewards claimed\");\n    claimRewards();\n  };\n\n  const isMining = approveAndStakeErc20State.status === \"Mining\" || answerState.status === \"Mining\" || claimRewardsState.status === \"Mining\";\n  console.log(isMining);\n  let temp1;\n  let temp2;\n  let temp3;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(WalletBalance, {\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleQuestionnaireCreationTest,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"rewards to assign:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: temp1,\n            onChange: handleInputChangeRewardsToAssign\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Maximun answers to accept:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: temp2,\n            onChange: handleInputChangeMaxAnswers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Deadline:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: temp3,\n            onChange: handleInputChangeDeadline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Creat Questionnaire!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your rewards:\", formattedRewards]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAnswer,\n        color: \"primary\",\n        size: \"large\",\n        disabled: isMining,\n        children: isMining ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 26\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 33\n        }, this) : \"Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), formattedRewards === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Rewards to claim!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClaimRewards,\n        color: \"primary\",\n        size: \"large\",\n        disabled: isMining,\n        children: isMining ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 26\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 37\n        }, this) : \"Claim Rewards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(StakeForm, \"0R98z55wixvOqRYmgLBDK1+6EO0=\", false, function () {\n  return [useEthers, useTokenBalance, useStakeTokens, useAnswer, useClaimRewards];\n});\n\n_c = StakeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StakeForm\");","map":{"version":3,"names":["React","useState","useEthers","useTokenBalance","formatUnits","Button","CircularProgress","useStakeTokens","useAnswer","useClaimRewards","utils","WalletBalance","StakeForm","token","address","tokenAddress","name","account","tokenBalance","formattedTokenBalance","parseFloat","rewardsToAssign","setRewardsToAssign","maxAnswers","setMaxAnswers","deadline","setDeadline","handleInputChangeRewardsToAssign","event","target","value","Number","console","log","handleInputChangeMaxAnswers","handleInputChangeDeadline","approveAndStake","state","approveAndStakeErc20State","handleQuestionnaireCreation","rewardsToAssignAsWei","parseEther","toString","handleQuestionnaireCreationTest","rewards","formattedRewards","answerQuestions","answerState","handleAnswer","claimRewards","claimRewardsState","handleClaimRewards","isMining","status","temp1","temp2","temp3"],"sources":["/Users/qianyisheng/Desktop/web3/brownie_test/brownie_fund_me/front_end/src/Components/yourWallet/StakeForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Token } from \"../Main\"\nimport { useEthers, useTokenBalance } from \"@usedapp/core\"\nimport { formatUnits } from \"@ethersproject/units\"\nimport { Button, Input, CircularProgress } from \"@material-ui/core\"\nimport { useStakeTokens, useRewardsCheck, useAnswer, useClaimRewards } from \"../../hooks\"\nimport { utils } from \"ethers\"\nimport { WalletBalance } from \"./WalletBalance\"\n\nexport interface StakeFormProps {\n    token: Token\n}\n\nexport const StakeForm = ({ token }: StakeFormProps) => {\n    const { address: tokenAddress, name } = token\n    const { account } = useEthers()\n    const tokenBalance = useTokenBalance(tokenAddress, account)\n    const formattedTokenBalance: number = tokenBalance ? parseFloat(formatUnits(tokenBalance, 18)) : 0\n\n    const [rewardsToAssign, setRewardsToAssign] = useState<number | string | Array<number | string>>(0)\n    const [maxAnswers, setMaxAnswers] = useState<number | string | Array<number | string>>(0)\n    const [deadline, setDeadline] = useState<number | string | Array<number | string>>(0)\n\n    const handleInputChangeRewardsToAssign = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const rewardsToAssign = event.target.value === \"\" ? \"\" : Number(event.target.value)\n        setRewardsToAssign(rewardsToAssign)\n        console.log(rewardsToAssign)\n    }\n\n\n    const handleInputChangeMaxAnswers = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const maxAnswers = event.target.value === \"\" ? \"\" : Number(event.target.value)\n        setMaxAnswers(maxAnswers)\n        console.log(maxAnswers)\n    }\n\n    const handleInputChangeDeadline = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const deadline = event.target.value === \"\" ? \"\" : Number(event.target.value)\n        setDeadline(deadline)\n        console.log(deadline)\n    }\n\n    const { approveAndStake, state: approveAndStakeErc20State } = useStakeTokens(tokenAddress)\n    console.log(\"here is rewards to assign:\", rewardsToAssign)\n    const handleQuestionnaireCreation = () => {\n        console.log(\"here is rewards to assign:\")\n        const rewardsToAssignAsWei = utils.parseEther(rewardsToAssign.toString())\n        console.log(\"here is rewards to assign:\", rewardsToAssignAsWei)\n        return approveAndStake(rewardsToAssignAsWei.toString())\n    }\n\n    const handleQuestionnaireCreationTest = () => {\n        console.log(\"test\")\n    }\n\n    //  const rewards = useRewardsCheck(tokenAddress)\n    const rewards = 100000000000\n    const formattedRewards: number = rewards ? parseFloat(formatUnits(rewards, 18)) : 0\n\n    const { answerQuestions, state: answerState } = useAnswer(\"0\")\n    const handleAnswer = () => {\n        console.log(\"answerd\")\n        answerQuestions()\n    }\n\n    const { claimRewards, state: claimRewardsState } = useClaimRewards(\"0\")\n    const handleClaimRewards = () => {\n        console.log(\"rewards claimed\")\n        claimRewards()\n    }\n    const isMining = approveAndStakeErc20State.status === \"Mining\" ||\n        answerState.status === \"Mining\" ||\n        claimRewardsState.status === \"Mining\"\n\n    console.log(isMining)\n    let temp1\n    let temp2\n    let temp3\n    return (\n        <>\n            <div>\n                <WalletBalance token={token}></WalletBalance>\n                <form onSubmit={handleQuestionnaireCreationTest}>\n                    <label>\n                        rewards to assign:\n                        <input type=\"text\" value={temp1} onChange={handleInputChangeRewardsToAssign}>\n                        </input>\n                    </label>\n                    <label>\n                        Maximun answers to accept:\n                        <input type=\"number\" value={temp2} onChange={handleInputChangeMaxAnswers}>\n                        </input>\n                    </label>\n                    <label>\n                        Deadline:\n                        <input type=\"number\" value={temp3} onChange={handleInputChangeDeadline}>\n                        </input>\n                    </label>\n                    <input type=\"submit\" value=\"Creat Questionnaire!!!\"></input>\n                </form>\n            </div>\n            <div>\n                <p>Your rewards:{formattedRewards}</p>\n            </div>\n            <div>\n                <Button\n                    onClick={handleAnswer}\n                    color=\"primary\"\n                    size=\"large\"\n                    disabled={isMining}>\n                    {isMining ? <CircularProgress size={26} /> : \"Answer\"}\n                </Button>\n            </div>\n            {formattedRewards === 0 ?\n                <p>No Rewards to claim!</p> :\n                <div>\n                    <Button\n                        onClick={handleClaimRewards}\n                        color=\"primary\"\n                        size=\"large\"\n                        disabled={isMining}>\n                        {isMining ? <CircularProgress size={26} /> : \"Claim Rewards\"}\n                    </Button>\n                </div>\n            }\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
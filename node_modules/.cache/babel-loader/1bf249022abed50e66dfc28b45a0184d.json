{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useEthers, useContractFunction } from \"@usedapp/core\";\nimport { constants, utils } from \"ethers\";\nimport networkMapping from \"../chain-info/deployments/map.json\";\nimport MainRouter from \"../chain-info/contracts/MainRouter.json\";\nimport { Contract } from \"@ethersproject/contracts\";\nexport const useUpdateQuestions = tokenAddress => {\n  _s();\n\n  // address\n  // abi\n  // chainId\n  const {\n    abi\n  } = MainRouter;\n  const {\n    chainId\n  } = useEthers();\n  const tokenFarmAddress = chainId ? networkMapping[\"4\"][\"MainRouter\"][0] : constants.AddressZero;\n  const tokenFarmInterface = new utils.Interface(abi);\n  const tokenFarmContract = new Contract(tokenFarmAddress, tokenFarmInterface);\n\n  const updateQuestions = () => {\n    return updateQ();\n  }; // stake\n\n\n  const {\n    send: updateQ,\n    state: updateQState\n  } = useContractFunction(tokenFarmContract, \"updateQuestionStatus\", {\n    transactionName: \"Update questions status\"\n  }); //useEffect\n\n  const [state, setState] = useState(updateQState);\n  useEffect(() => {\n    setState(updateQState);\n  }, [updateQState]);\n  return {\n    updateQuestions,\n    state\n  };\n};\n\n_s(useUpdateQuestions, \"ngCidVb59syG69BdEifzNt5GNJM=\", false, function () {\n  return [useEthers, useContractFunction];\n});","map":{"version":3,"names":["useEffect","useState","useEthers","useContractFunction","constants","utils","networkMapping","MainRouter","Contract","useUpdateQuestions","tokenAddress","abi","chainId","tokenFarmAddress","AddressZero","tokenFarmInterface","Interface","tokenFarmContract","updateQuestions","updateQ","send","state","updateQState","transactionName","setState"],"sources":["/Users/qianyisheng/Desktop/web3/brownie_test/web3_survey/front_end/src/hooks/useUpdateQuestions.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useEthers, useContractFunction } from \"@usedapp/core\"\nimport { constants, utils } from \"ethers\"\nimport networkMapping from \"../chain-info/deployments/map.json\"\nimport MainRouter from \"../chain-info/contracts/MainRouter.json\"\nimport { Contract } from \"@ethersproject/contracts\"\n\nexport const useUpdateQuestions = (tokenAddress: string) => {\n    // address\n    // abi\n    // chainId\n    const { abi } = MainRouter\n    const { chainId } = useEthers()\n    const tokenFarmAddress = chainId ? networkMapping[\"4\"][\"MainRouter\"][0] : constants.AddressZero\n    const tokenFarmInterface = new utils.Interface(abi)\n    const tokenFarmContract = new Contract(tokenFarmAddress, tokenFarmInterface)\n\n    const updateQuestions = () => {\n        return updateQ()\n    }\n\n    // stake\n    const { send: updateQ, state: updateQState } =\n        useContractFunction(tokenFarmContract, \"updateQuestionStatus\", {\n            transactionName: \"Update questions status\",\n        })\n\n    //useEffect\n    const [state, setState] = useState(updateQState)\n\n    useEffect(() => {\n        setState(updateQState)\n    }, [updateQState])\n\n\n    return { updateQuestions, state }\n}"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,mBAApB,QAA+C,eAA/C;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,QAAjC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,YAAD,IAA0B;EAAA;;EACxD;EACA;EACA;EACA,MAAM;IAAEC;EAAF,IAAUJ,UAAhB;EACA,MAAM;IAAEK;EAAF,IAAcV,SAAS,EAA7B;EACA,MAAMW,gBAAgB,GAAGD,OAAO,GAAGN,cAAc,CAAC,GAAD,CAAd,CAAoB,YAApB,EAAkC,CAAlC,CAAH,GAA0CF,SAAS,CAACU,WAApF;EACA,MAAMC,kBAAkB,GAAG,IAAIV,KAAK,CAACW,SAAV,CAAoBL,GAApB,CAA3B;EACA,MAAMM,iBAAiB,GAAG,IAAIT,QAAJ,CAAaK,gBAAb,EAA+BE,kBAA/B,CAA1B;;EAEA,MAAMG,eAAe,GAAG,MAAM;IAC1B,OAAOC,OAAO,EAAd;EACH,CAFD,CAVwD,CAcxD;;;EACA,MAAM;IAAEC,IAAI,EAAED,OAAR;IAAiBE,KAAK,EAAEC;EAAxB,IACFnB,mBAAmB,CAACc,iBAAD,EAAoB,sBAApB,EAA4C;IAC3DM,eAAe,EAAE;EAD0C,CAA5C,CADvB,CAfwD,CAoBxD;;EACA,MAAM,CAACF,KAAD,EAAQG,QAAR,IAAoBvB,QAAQ,CAACqB,YAAD,CAAlC;EAEAtB,SAAS,CAAC,MAAM;IACZwB,QAAQ,CAACF,YAAD,CAAR;EACH,CAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;EAKA,OAAO;IAAEJ,eAAF;IAAmBG;EAAnB,CAAP;AACH,CA7BM;;GAAMZ,kB;UAKWP,S,EAWhBC,mB"},"metadata":{},"sourceType":"module"}
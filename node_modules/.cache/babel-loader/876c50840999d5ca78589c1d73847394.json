{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useEthers, useContractFunction } from \"@usedapp/core\";\nimport { constants, utils } from \"ethers\";\nimport MainRouter from \"../chain-info/contracts/MainRouter.json\";\nimport networkMapping from \"../chain-info/deployments/map.json\";\nimport { Contract } from \"@ethersproject/contracts\";\nexport const useClaimRewards = tokenAddress => {\n  _s();\n\n  // address\n  // abi\n  // chainId\n  const {\n    abi\n  } = MainRouter;\n  const {\n    chainId\n  } = useEthers();\n  const tokenFarmAddress = chainId ? networkMapping[\"4\"][\"MainRouter\"][0] : constants.AddressZero;\n  const tokenFarmInterface = new utils.Interface(abi);\n  const tokenFarmContract = new Contract(tokenFarmAddress, tokenFarmInterface);\n\n  const claimRewards = () => {\n    return claim();\n  }; // stake\n\n\n  const {\n    send: claim,\n    state: claimState\n  } = useContractFunction(tokenFarmContract, \"claimRewards\", {\n    transactionName: \"Claim Rewards\"\n  }); //useEffect\n\n  const [state, setState] = useState(claimState);\n  useEffect(() => {\n    setState(claimState);\n  }, [claimState]);\n  return {\n    claimRewards,\n    state\n  };\n};\n\n_s(useClaimRewards, \"RSSEodOmD2TutBQ+7x0Q8F9afdw=\", false, function () {\n  return [useEthers, useContractFunction];\n});","map":{"version":3,"names":["useEffect","useState","useEthers","useContractFunction","constants","utils","MainRouter","networkMapping","Contract","useClaimRewards","tokenAddress","abi","chainId","tokenFarmAddress","AddressZero","tokenFarmInterface","Interface","tokenFarmContract","claimRewards","claim","send","state","claimState","transactionName","setState"],"sources":["/Users/qianyisheng/Desktop/web3/brownie_test/brownie_fund_me/front_end/src/hooks/useClaimRewards.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useEthers, useContractFunction } from \"@usedapp/core\"\nimport { constants, utils } from \"ethers\"\nimport MainRouter from \"../chain-info/contracts/MainRouter.json\"\nimport networkMapping from \"../chain-info/deployments/map.json\"\nimport { Contract } from \"@ethersproject/contracts\"\n\nexport const useClaimRewards = (tokenAddress: string) => {\n    // address\n    // abi\n    // chainId\n    const { abi } = MainRouter\n    const { chainId } = useEthers()\n    const tokenFarmAddress = chainId ? networkMapping[\"4\"][\"MainRouter\"][0] : constants.AddressZero\n    const tokenFarmInterface = new utils.Interface(abi)\n    const tokenFarmContract = new Contract(tokenFarmAddress, tokenFarmInterface)\n\n    const claimRewards = () => {\n        return claim()\n    }\n\n    // stake\n    const { send: claim, state: claimState } =\n        useContractFunction(tokenFarmContract, \"claimRewards\", {\n            transactionName: \"Claim Rewards\",\n        })\n\n    //useEffect\n    const [state, setState] = useState(claimState)\n    useEffect(() => {\n        setState(claimState)\n    }, [claimState])\n\n\n    return { claimRewards, state }\n}"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,mBAApB,QAA+C,eAA/C;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,QAAjC;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,OAAO,MAAMC,eAAe,GAAIC,YAAD,IAA0B;EAAA;;EACrD;EACA;EACA;EACA,MAAM;IAAEC;EAAF,IAAUL,UAAhB;EACA,MAAM;IAAEM;EAAF,IAAcV,SAAS,EAA7B;EACA,MAAMW,gBAAgB,GAAGD,OAAO,GAAGL,cAAc,CAAC,GAAD,CAAd,CAAoB,YAApB,EAAkC,CAAlC,CAAH,GAA0CH,SAAS,CAACU,WAApF;EACA,MAAMC,kBAAkB,GAAG,IAAIV,KAAK,CAACW,SAAV,CAAoBL,GAApB,CAA3B;EACA,MAAMM,iBAAiB,GAAG,IAAIT,QAAJ,CAAaK,gBAAb,EAA+BE,kBAA/B,CAA1B;;EAEA,MAAMG,YAAY,GAAG,MAAM;IACvB,OAAOC,KAAK,EAAZ;EACH,CAFD,CAVqD,CAcrD;;;EACA,MAAM;IAAEC,IAAI,EAAED,KAAR;IAAeE,KAAK,EAAEC;EAAtB,IACFnB,mBAAmB,CAACc,iBAAD,EAAoB,cAApB,EAAoC;IACnDM,eAAe,EAAE;EADkC,CAApC,CADvB,CAfqD,CAoBrD;;EACA,MAAM,CAACF,KAAD,EAAQG,QAAR,IAAoBvB,QAAQ,CAACqB,UAAD,CAAlC;EACAtB,SAAS,CAAC,MAAM;IACZwB,QAAQ,CAACF,UAAD,CAAR;EACH,CAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;EAKA,OAAO;IAAEJ,YAAF;IAAgBG;EAAhB,CAAP;AACH,CA5BM;;GAAMZ,e;UAKWP,S,EAWhBC,mB"},"metadata":{},"sourceType":"module"}
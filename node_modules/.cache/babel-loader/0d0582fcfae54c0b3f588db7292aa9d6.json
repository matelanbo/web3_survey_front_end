{"ast":null,"code":"var _jsxFileName = \"/Users/qianyisheng/Desktop/web3/brownie_test/brownie_fund_me/front_end/src/Components/Main.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable spaced-comment */\n/// <reference types=\"react-scripts\" />\nimport { useEthers } from \"@usedapp/core\";\nimport { YourWallet } from \"./yourWallet\";\nimport { makeStyles } from \"@material-ui/core\";\nimport eth from \"../eth.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  title: {\n    color: theme.palette.common.white,\n    textAlign: \"center\",\n    padding: theme.spacing(4)\n  }\n}));\nexport const Main = () => {\n  _s();\n\n  // Show token values from the wallet\n  // Get the address of different tokens\n  // Get the balance of the users wallet\n  // send the brownie-config to our `src` folder\n  // send the build folder\n  const classes = useStyles();\n  const {\n    chainId,\n    error\n  } = useEthers(); //   const networkName = chainId ? helperConfig[chainId] : \"dev\"\n  //   let stringChainId = String(chainId)\n  //   const dappTokenAddress = chainId ? networkMapping[stringChainId][\"DappToken\"][0] : constants.AddressZero\n  //   const wethTokenAddress = chainId ? brownieConfig[\"networks\"][networkName][\"weth_token\"] : constants.AddressZero // brownie config\n  //   const fauTokenAddress = chainId ? brownieConfig[\"networks\"][networkName][\"fau_token\"] : constants.AddressZero\n\n  const supportedTokens = [{\n    image: eth,\n    address: \"123\",\n    name: \"ETH\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: classes.title,\n      children: \"Dapp Token App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(YourWallet, {\n      supportedTokens: supportedTokens\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Main, \"hC6Gcf1Ne8SRwEBIrUn4Pax4KaU=\", false, function () {\n  return [useStyles, useEthers];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useEthers","YourWallet","makeStyles","eth","useStyles","theme","title","color","palette","common","white","textAlign","padding","spacing","Main","classes","chainId","error","supportedTokens","image","address","name"],"sources":["/Users/qianyisheng/Desktop/web3/brownie_test/brownie_fund_me/front_end/src/Components/Main.tsx"],"sourcesContent":["/* eslint-disable spaced-comment */\n/// <reference types=\"react-scripts\" />\nimport { useEthers } from \"@usedapp/core\"\nimport { YourWallet } from \"./yourWallet\"\nimport { makeStyles } from \"@material-ui/core\"\nimport eth from \"../eth.png\"\n\nexport type Token = {\n    image: string\n    address: string\n    name: string\n}\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.common.white,\n        textAlign: \"center\",\n        padding: theme.spacing(4)\n    }\n}))\n\nexport const Main = () => {\n    // Show token values from the wallet\n    // Get the address of different tokens\n    // Get the balance of the users wallet\n\n    // send the brownie-config to our `src` folder\n    // send the build folder\n    const classes = useStyles()\n    const { chainId, error } = useEthers()\n    //   const networkName = chainId ? helperConfig[chainId] : \"dev\"\n    //   let stringChainId = String(chainId)\n    //   const dappTokenAddress = chainId ? networkMapping[stringChainId][\"DappToken\"][0] : constants.AddressZero\n    //   const wethTokenAddress = chainId ? brownieConfig[\"networks\"][networkName][\"weth_token\"] : constants.AddressZero // brownie config\n    //   const fauTokenAddress = chainId ? brownieConfig[\"networks\"][networkName][\"fau_token\"] : constants.AddressZero\n    const supportedTokens: Array<Token> = [\n        {\n            image: eth,\n            address: \"123\",\n            name: \"ETH\"\n        },\n    ]\n\n\n    return (<>\n        <h2 className={classes.title}>Dapp Token App</h2>\n        <YourWallet supportedTokens={supportedTokens} />\n    </>)\n}"],"mappings":";;;AAAA;AACA;AACA,SAASA,SAAT,QAA0B,eAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,GAAP,MAAgB,YAAhB;;;AAQA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;EACrCC,KAAK,EAAE;IACHC,KAAK,EAAEF,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBC,KADzB;IAEHC,SAAS,EAAE,QAFR;IAGHC,OAAO,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd;EAHN;AAD8B,CAAZ,CAAD,CAA5B;AAQA,OAAO,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACtB;EACA;EACA;EAEA;EACA;EACA,MAAMC,OAAO,GAAGX,SAAS,EAAzB;EACA,MAAM;IAAEY,OAAF;IAAWC;EAAX,IAAqBjB,SAAS,EAApC,CARsB,CAStB;EACA;EACA;EACA;EACA;;EACA,MAAMkB,eAA6B,GAAG,CAClC;IACIC,KAAK,EAAEhB,GADX;IAEIiB,OAAO,EAAE,KAFb;IAGIC,IAAI,EAAE;EAHV,CADkC,CAAtC;EASA,oBAAQ;IAAA,wBACJ;MAAI,SAAS,EAAEN,OAAO,CAACT,KAAvB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADI,eAEJ,QAAC,UAAD;MAAY,eAAe,EAAEY;IAA7B;MAAA;MAAA;MAAA;IAAA,QAFI;EAAA,gBAAR;AAIH,CA3BM;;GAAMJ,I;UAOOV,S,EACWJ,S;;;KARlBc,I"},"metadata":{},"sourceType":"module"}
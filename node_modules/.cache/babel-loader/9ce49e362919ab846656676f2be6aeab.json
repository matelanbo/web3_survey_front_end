{"ast":null,"code":"export function validateArguments(args, assertions) {\n  for (const key of Object.getOwnPropertyNames(args)) {\n    if (typeof args[key] !== assertions[key]) {\n      throw new Error(`Expected \"${key}\" to be of type \"${assertions[key]}\", got \"${args[key]}\" instead.`);\n    }\n  }\n}","map":{"version":3,"mappings":"AAEA,OAAM,SAAUA,iBAAV,CAA+DC,IAA/D,EAAwEC,UAAxE,EAAiG;EACrG,KAAK,MAAMC,GAAX,IAAkBC,MAAM,CAACC,mBAAP,CAA2BJ,IAA3B,CAAlB,EAAmE;IACjE,IAAI,OAAOA,IAAI,CAACE,GAAD,CAAX,KAAqBD,UAAU,CAACC,GAAD,CAAnC,EAA0C;MACxC,MAAM,IAAIG,KAAJ,CAAU,aAAaH,GAAG,oBAAoBD,UAAU,CAACC,GAAD,CAAK,WAAWF,IAAI,CAACE,GAAD,CAAK,YAAjF,CAAN;IACD;EACF;AACF","names":["validateArguments","args","assertions","key","Object","getOwnPropertyNames","Error"],"sources":["/Users/qianyisheng/Desktop/web3/brownie_test/web3_survey/front_end/node_modules/@usedapp/core/src/helpers/validateArgument.ts"],"sourcesContent":["export type Assertions<S extends Record<string, unknown>> = { [K in keyof S]: string }\n\nexport function validateArguments<S extends Record<string, unknown>>(args: S, assertions: Assertions<S>): void {\n  for (const key of Object.getOwnPropertyNames(args) as (keyof S)[]) {\n    if (typeof args[key] !== assertions[key]) {\n      throw new Error(`Expected \"${key}\" to be of type \"${assertions[key]}\", got \"${args[key]}\" instead.`)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
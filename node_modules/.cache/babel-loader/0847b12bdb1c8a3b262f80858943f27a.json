{"ast":null,"code":"export function notificationReducer(state, action) {\n  var _a;\n\n  const {\n    chainId\n  } = action;\n  const chainState = (_a = state[chainId]) !== null && _a !== void 0 ? _a : [];\n\n  switch (action.type) {\n    case 'ADD_NOTIFICATION':\n      return Object.assign(Object.assign({}, state), {\n        [chainId]: [action.notification, ...chainState]\n      });\n\n    case 'REMOVE_NOTIFICATION':\n      {\n        return Object.assign(Object.assign({}, state), {\n          [chainId]: chainState.filter(notification => notification.id !== action.notificationId)\n        });\n      }\n  }\n}","map":{"version":3,"mappings":"AAgBA,OAAM,SAAUA,mBAAV,CAA8BC,KAA9B,EAAoDC,MAApD,EAAkE;;;EACtE,MAAM;IAAEC;EAAF,IAAcD,MAApB;EACA,MAAME,UAAU,GAAG,WAAK,CAACD,OAAD,CAAL,MAAc,IAAd,IAAcE,aAAd,GAAcA,EAAd,GAAkB,EAArC;;EAEA,QAAQH,MAAM,CAACI,IAAf;IACE,KAAK,kBAAL;MACE,uCACKL,KADL,GACU;QACR,CAACE,OAAD,GAAW,CAACD,MAAM,CAACK,YAAR,EAAsB,GAAGH,UAAzB;MADH,CADV;;IAIF,KAAK,qBAAL;MAA4B;QAC1B,uCACKH,KADL,GACU;UACR,CAACE,OAAD,GAAWC,UAAU,CAACI,MAAX,CAAmBD,YAAD,IAAkBA,YAAY,CAACE,EAAb,KAAoBP,MAAM,CAACQ,cAA/D;QADH,CADV;MAID;EAXH;AAaD","names":["notificationReducer","state","action","chainId","chainState","_a","type","notification","filter","id","notificationId"],"sources":["/Users/qianyisheng/Desktop/web3/brownie_test/web3_survey/front_end/node_modules/@usedapp/core/src/providers/notifications/reducer.ts"],"sourcesContent":["import { Notification, Notifications } from './model'\n\ninterface AddNotification {\n  type: 'ADD_NOTIFICATION'\n  chainId: number\n  notification: Notification\n}\n\ninterface RemoveNotification {\n  type: 'REMOVE_NOTIFICATION'\n  chainId: number\n  notificationId: string\n}\n\ntype Action = AddNotification | RemoveNotification\n\nexport function notificationReducer(state: Notifications, action: Action): Notifications {\n  const { chainId } = action\n  const chainState = state[chainId] ?? []\n\n  switch (action.type) {\n    case 'ADD_NOTIFICATION':\n      return {\n        ...state,\n        [chainId]: [action.notification, ...chainState],\n      }\n    case 'REMOVE_NOTIFICATION': {\n      return {\n        ...state,\n        [chainId]: chainState.filter((notification) => notification.id !== action.notificationId),\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/qianyisheng/Desktop/web3/brownie_test/brownie_fund_me/front_end/src/Components/yourWallet/StakeForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useEthers, useTokenBalance } from \"@usedapp/core\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { Button, CircularProgress } from \"@material-ui/core\";\nimport { useStakeTokens, useAnswer, useClaimRewards } from \"../../hooks\";\nimport { utils } from \"ethers\";\nimport { WalletBalance } from \"./WalletBalance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const StakeForm = _ref => {\n  _s();\n\n  let {\n    token\n  } = _ref;\n  const {\n    address: tokenAddress,\n    name\n  } = token;\n  const {\n    account\n  } = useEthers();\n  const tokenBalance = useTokenBalance(tokenAddress, account);\n  const formattedTokenBalance = tokenBalance ? parseFloat(formatUnits(tokenBalance, 18)) : 0;\n  const [rewardsToAssign, setRewardsToAssign] = useState('');\n  const [maxAnswers, setMaxAnswers] = useState('');\n  const [deadline, setDeadline] = useState('');\n  const [answerId, setAnswerId] = useState(''); //   const handleInputChangeDeadline = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //       const deadline = event.target.value === \"\" ? \"\" : Number(event.target.value)\n  //       setDeadline(deadline)\n  //       console.log(deadline)\n  //   }\n\n  const {\n    approveAndStake,\n    state: approveAndStakeErc20State\n  } = useStakeTokens(tokenAddress); //  console.log(\"here is rewards to assign:\", rewardsToAssign)\n\n  const handleQuestionnaireCreation = event => {\n    event.preventDefault();\n    console.log(\"here is rewards to assign:\");\n    const rewardsToAssignAsWei = utils.parseEther(rewardsToAssign.toString());\n    console.log(\"here is rewards to assign:\", rewardsToAssignAsWei);\n    return approveAndStake(rewardsToAssignAsWei.toString());\n  }; //  const rewards = useRewardsCheck(tokenAddress)\n\n\n  const rewards = 100000000000;\n  const formattedRewards = rewards ? parseFloat(formatUnits(rewards, 18)) : 0;\n  const {\n    answerQuestions,\n    state: answerState\n  } = useAnswer(\"0\");\n\n  const handleAnswer = () => {\n    console.log(\"answerd question\", answerId); //      answerQuestions()\n  };\n\n  const {\n    claimRewards,\n    state: claimRewardsState\n  } = useClaimRewards(\"0\");\n\n  const handleClaimRewards = () => {\n    console.log(\"rewards claimed\");\n    claimRewards();\n  };\n\n  const isMining = approveAndStakeErc20State.status === \"Mining\" || answerState.status === \"Mining\" || claimRewardsState.status === \"Mining\"; //   console.log(isMining)\n\n  console.log(rewardsToAssign, maxAnswers, deadline);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(WalletBalance, {\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleQuestionnaireCreation,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"rewards to assign:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            value: rewardsToAssign,\n            onChange: e => setRewardsToAssign(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Maximun answers to accept:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            required: true,\n            value: maxAnswers,\n            onChange: e => setMaxAnswers(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Deadline:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            required: true,\n            value: deadline,\n            onChange: e => setDeadline(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), isMining ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 26\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Creat Questionnaire!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your rewards:\", formattedRewards]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setAnswerId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAnswer,\n        color: \"primary\",\n        size: \"large\",\n        disabled: isMining,\n        children: isMining ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 26\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 33\n        }, this) : \"Answer Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), formattedRewards === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Rewards to claim!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClaimRewards,\n        color: \"primary\",\n        size: \"large\",\n        disabled: isMining,\n        children: isMining ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 26\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 37\n        }, this) : \"Claim Rewards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(StakeForm, \"/bLsa5ufl44LD4ehdxaf99b1qqo=\", false, function () {\n  return [useEthers, useTokenBalance, useStakeTokens, useAnswer, useClaimRewards];\n});\n\n_c = StakeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StakeForm\");","map":{"version":3,"names":["React","useState","useEthers","useTokenBalance","formatUnits","Button","CircularProgress","useStakeTokens","useAnswer","useClaimRewards","utils","WalletBalance","StakeForm","token","address","tokenAddress","name","account","tokenBalance","formattedTokenBalance","parseFloat","rewardsToAssign","setRewardsToAssign","maxAnswers","setMaxAnswers","deadline","setDeadline","answerId","setAnswerId","approveAndStake","state","approveAndStakeErc20State","handleQuestionnaireCreation","event","preventDefault","console","log","rewardsToAssignAsWei","parseEther","toString","rewards","formattedRewards","answerQuestions","answerState","handleAnswer","claimRewards","claimRewardsState","handleClaimRewards","isMining","status","e","target","value"],"sources":["/Users/qianyisheng/Desktop/web3/brownie_test/brownie_fund_me/front_end/src/Components/yourWallet/StakeForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Token } from \"../Main\"\nimport { useEthers, useTokenBalance } from \"@usedapp/core\"\nimport { formatUnits } from \"@ethersproject/units\"\nimport { Button, Input, CircularProgress } from \"@material-ui/core\"\nimport { useStakeTokens, useRewardsCheck, useAnswer, useClaimRewards } from \"../../hooks\"\nimport { utils } from \"ethers\"\nimport { WalletBalance } from \"./WalletBalance\"\n\nexport interface StakeFormProps {\n    token: Token\n}\n\nexport const StakeForm = ({ token }: StakeFormProps) => {\n    const { address: tokenAddress, name } = token\n    const { account } = useEthers()\n    const tokenBalance = useTokenBalance(tokenAddress, account)\n    const formattedTokenBalance: number = tokenBalance ? parseFloat(formatUnits(tokenBalance, 18)) : 0\n\n    const [rewardsToAssign, setRewardsToAssign] = useState('')\n    const [maxAnswers, setMaxAnswers] = useState('')\n    const [deadline, setDeadline] = useState('')\n\n    const [answerId, setAnswerId] = useState('')\n\n\n\n    //   const handleInputChangeDeadline = (event: React.ChangeEvent<HTMLInputElement>) => {\n    //       const deadline = event.target.value === \"\" ? \"\" : Number(event.target.value)\n    //       setDeadline(deadline)\n    //       console.log(deadline)\n    //   }\n\n    const { approveAndStake, state: approveAndStakeErc20State } = useStakeTokens(tokenAddress)\n    //  console.log(\"here is rewards to assign:\", rewardsToAssign)\n    const handleQuestionnaireCreation = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        console.log(\"here is rewards to assign:\")\n        const rewardsToAssignAsWei = utils.parseEther(rewardsToAssign.toString())\n        console.log(\"here is rewards to assign:\", rewardsToAssignAsWei)\n        return approveAndStake(rewardsToAssignAsWei.toString())\n    }\n\n\n\n    //  const rewards = useRewardsCheck(tokenAddress)\n    const rewards = 100000000000\n    const formattedRewards: number = rewards ? parseFloat(formatUnits(rewards, 18)) : 0\n\n    const { answerQuestions, state: answerState } = useAnswer(\"0\")\n    const handleAnswer = () => {\n        console.log(\"answerd question\", answerId)\n        //      answerQuestions()\n    }\n\n    const { claimRewards, state: claimRewardsState } = useClaimRewards(\"0\")\n    const handleClaimRewards = () => {\n        console.log(\"rewards claimed\")\n        claimRewards()\n    }\n    const isMining = approveAndStakeErc20State.status === \"Mining\" ||\n        answerState.status === \"Mining\" ||\n        claimRewardsState.status === \"Mining\"\n\n    //   console.log(isMining)\n\n    console.log(rewardsToAssign, maxAnswers, deadline)\n    return (\n        <>\n            <div>\n                <WalletBalance token={token}></WalletBalance>\n                <form onSubmit={handleQuestionnaireCreation}>\n                    <label>\n                        rewards to assign:\n                        <input type=\"text\" required value={rewardsToAssign} onChange={(e) => setRewardsToAssign(e.target.value)}>\n                        </input>\n                    </label>\n                    <label>\n                        Maximun answers to accept:\n                        <input type=\"number\" required value={maxAnswers} onChange={(e) => setMaxAnswers(e.target.value)}>\n                        </input>\n                    </label>\n                    <label>\n                        Deadline:\n                        <input type=\"number\" required value={deadline} onChange={(e) => setDeadline(e.target.value)}>\n                        </input>\n                    </label>\n                    {isMining ? <CircularProgress size={26} /> :\n                        <input type=\"submit\" value=\"Creat Questionnaire!!!\"></input>}\n                </form>\n            </div>\n            <div>\n                <p>Your rewards:{formattedRewards}</p>\n            </div>\n            <div>\n                <input onChange={(e) => setAnswerId(e.target.value)}></input>\n                <Button\n                    onClick={handleAnswer}\n                    color=\"primary\"\n                    size=\"large\"\n                    disabled={isMining}>\n                    {isMining ? <CircularProgress size={26} /> : \"Answer Question\"}\n                </Button>\n            </div>\n            {formattedRewards === 0 ?\n                <p>No Rewards to claim!</p> :\n                <div>\n                    <Button\n                        onClick={handleClaimRewards}\n                        color=\"primary\"\n                        size=\"large\"\n                        disabled={isMining}>\n                        {isMining ? <CircularProgress size={26} /> : \"Claim Rewards\"}\n                    </Button>\n                </div>\n            }\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
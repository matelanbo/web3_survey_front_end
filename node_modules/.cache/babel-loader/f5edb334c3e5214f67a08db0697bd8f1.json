{"ast":null,"code":"var _jsxFileName = \"/Users/qianyisheng/Desktop/web3/brownie_test/brownie_fund_me/front_end/src/Components/yourWallet/WalletBalance.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEtherBalance, useEthers, useTokenBalance } from \"@usedapp/core\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WalletBalance = _ref => {\n  _s();\n\n  let {\n    token\n  } = _ref;\n  const {\n    image,\n    address,\n    name\n  } = token;\n  const {\n    account\n  } = useEthers();\n  console.log(address, account);\n  const {\n    chainId\n  } = useEthers();\n  console.log(\"here\", chainId, account);\n  console.log(useEtherBalance(account)); //   const tokenBalance = useEtherBalance(account)\n\n  const tokenBalance = useTokenBalance(address, account);\n  const formattedTokenBalance = tokenBalance ? parseFloat(formatUnits(tokenBalance, 18)) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Your token balance is \", formattedTokenBalance]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }, this);\n};\n\n_s(WalletBalance, \"O13WsRrgZHbNlJw/CwLzyDLJ2EE=\", false, function () {\n  return [useEthers, useEthers, useEtherBalance, useTokenBalance];\n});\n\n_c = WalletBalance;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletBalance\");","map":{"version":3,"names":["useEtherBalance","useEthers","useTokenBalance","formatUnits","WalletBalance","token","image","address","name","account","console","log","chainId","tokenBalance","formattedTokenBalance","parseFloat"],"sources":["/Users/qianyisheng/Desktop/web3/brownie_test/brownie_fund_me/front_end/src/Components/yourWallet/WalletBalance.tsx"],"sourcesContent":["import { Rinkeby, useEtherBalance, useEthers, useTokenBalance } from \"@usedapp/core\"\nimport { Token } from \"../Main\"\nimport { formatUnits } from \"@ethersproject/units\"\n\nexport interface WalletBalanceProps {\n    token: Token\n}\n\nexport const WalletBalance = ({ token }: WalletBalanceProps) => {\n    const { image, address, name } = token\n    const { account } = useEthers()\n    console.log(address, account)\n    const { chainId } = useEthers()\n    console.log(\"here\", chainId, account)\n    console.log(useEtherBalance(account))\n    //   const tokenBalance = useEtherBalance(account)\n    const tokenBalance = useTokenBalance(address, account)\n    const formattedTokenBalance: number = tokenBalance ? parseFloat(formatUnits(tokenBalance, 18)) : 0\n    return (<div>Your token balance is {formattedTokenBalance}</div>)\n}"],"mappings":";;;AAAA,SAAkBA,eAAlB,EAAmCC,SAAnC,EAA8CC,eAA9C,QAAqE,eAArE;AAEA,SAASC,WAAT,QAA4B,sBAA5B;;AAMA,OAAO,MAAMC,aAAa,GAAG,QAAmC;EAAA;;EAAA,IAAlC;IAAEC;EAAF,CAAkC;EAC5D,MAAM;IAAEC,KAAF;IAASC,OAAT;IAAkBC;EAAlB,IAA2BH,KAAjC;EACA,MAAM;IAAEI;EAAF,IAAcR,SAAS,EAA7B;EACAS,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAAqBE,OAArB;EACA,MAAM;IAAEG;EAAF,IAAcX,SAAS,EAA7B;EACAS,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBC,OAApB,EAA6BH,OAA7B;EACAC,OAAO,CAACC,GAAR,CAAYX,eAAe,CAACS,OAAD,CAA3B,EAN4D,CAO5D;;EACA,MAAMI,YAAY,GAAGX,eAAe,CAACK,OAAD,EAAUE,OAAV,CAApC;EACA,MAAMK,qBAA6B,GAAGD,YAAY,GAAGE,UAAU,CAACZ,WAAW,CAACU,YAAD,EAAe,EAAf,CAAZ,CAAb,GAA+C,CAAjG;EACA,oBAAQ;IAAA,qCAA4BC,qBAA5B;EAAA;IAAA;IAAA;IAAA;EAAA,QAAR;AACH,CAXM;;GAAMV,a;UAEWH,S,EAEAA,S,EAERD,e,EAESE,e;;;KARZE,a"},"metadata":{},"sourceType":"module"}
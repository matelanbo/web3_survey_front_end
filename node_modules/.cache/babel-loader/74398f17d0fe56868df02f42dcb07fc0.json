{"ast":null,"code":"import { useCallback, useState } from 'react';\nimport { useNotificationsContext, useTransactionsContext } from '../providers';\nimport { BigNumber, errors } from 'ethers';\n/**\n * @internal\n */\n\nexport async function estimateTransactionGasLimit(transactionRequest, signer, gasLimitBufferPercentage) {\n  if (!signer || !transactionRequest) {\n    return undefined;\n  }\n\n  try {\n    const estimatedGas = transactionRequest.gasLimit ? BigNumber.from(transactionRequest.gasLimit) : await signer.estimateGas(transactionRequest);\n    return estimatedGas === null || estimatedGas === void 0 ? void 0 : estimatedGas.mul(gasLimitBufferPercentage + 100).div(100);\n  } catch (err) {\n    console.error(err);\n    return undefined;\n  }\n}\n/**\n * @internal\n */\n\nexport async function estimateContractFunctionGasLimit(contractWithSigner, functionName, args, gasLimitBufferPercentage) {\n  try {\n    const estimatedGas = await contractWithSigner.estimateGas[functionName](...args);\n    const gasLimit = estimatedGas === null || estimatedGas === void 0 ? void 0 : estimatedGas.mul(gasLimitBufferPercentage + 100).div(100);\n    return gasLimit;\n  } catch (err) {\n    console.error(err);\n    return undefined;\n  }\n}\n\nconst isDroppedAndReplaced = e => (e === null || e === void 0 ? void 0 : e.code) === errors.TRANSACTION_REPLACED && (e === null || e === void 0 ? void 0 : e.replacement) && ((e === null || e === void 0 ? void 0 : e.reason) === 'repriced' || (e === null || e === void 0 ? void 0 : e.cancelled) === false);\n\nexport function usePromiseTransaction(chainId, options) {\n  const [state, setState] = useState({\n    status: 'None'\n  });\n  const {\n    addTransaction\n  } = useTransactionsContext();\n  const {\n    addNotification\n  } = useNotificationsContext();\n  const resetState = useCallback(() => {\n    setState({\n      status: 'None'\n    });\n  }, [setState]);\n  const promiseTransaction = useCallback(async transactionPromise => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w;\n\n    if (!chainId) return;\n    let transaction = undefined;\n\n    try {\n      setState({\n        status: 'PendingSignature',\n        chainId\n      });\n      transaction = await transactionPromise;\n      setState({\n        transaction,\n        status: 'Mining',\n        chainId\n      });\n      addTransaction({\n        transaction: Object.assign(Object.assign({}, transaction), {\n          chainId: chainId\n        }),\n        submittedAt: Date.now(),\n        transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n      });\n      const receipt = await transaction.wait();\n      setState({\n        receipt,\n        transaction,\n        status: 'Success',\n        chainId\n      });\n      return receipt;\n    } catch (e) {\n      const parsedErrorCode = parseInt((_g = (_e = (_c = (_b = (_a = e.error) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.code) !== null && _c !== void 0 ? _c : (_d = e.error) === null || _d === void 0 ? void 0 : _d.code) !== null && _e !== void 0 ? _e : (_f = e.data) === null || _f === void 0 ? void 0 : _f.code) !== null && _g !== void 0 ? _g : e.code);\n      const errorCode = isNaN(parsedErrorCode) ? undefined : parsedErrorCode;\n      const errorHash = (_l = (_k = (_j = (_h = e === null || e === void 0 ? void 0 : e.error) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.originalError) === null || _k === void 0 ? void 0 : _k.data) !== null && _l !== void 0 ? _l : (_m = e === null || e === void 0 ? void 0 : e.error) === null || _m === void 0 ? void 0 : _m.data;\n      const errorMessage = (_v = (_t = (_s = (_q = (_p = (_o = e.error) === null || _o === void 0 ? void 0 : _o.data) === null || _p === void 0 ? void 0 : _p.message) !== null && _q !== void 0 ? _q : (_r = e.error) === null || _r === void 0 ? void 0 : _r.message) !== null && _s !== void 0 ? _s : e.reason) !== null && _t !== void 0 ? _t : (_u = e.data) === null || _u === void 0 ? void 0 : _u.message) !== null && _v !== void 0 ? _v : e.message;\n\n      if (transaction) {\n        const droppedAndReplaced = isDroppedAndReplaced(e);\n\n        if (droppedAndReplaced) {\n          const status = e.receipt.status === 0 ? 'Fail' : 'Success';\n          const type = status === 'Fail' ? 'transactionFailed' : 'transactionSucceed';\n          addNotification({\n            notification: {\n              type,\n              submittedAt: Date.now(),\n              transaction: e.replacement,\n              receipt: e.receipt,\n              transactionName: (_w = e.replacement) === null || _w === void 0 ? void 0 : _w.transactionName,\n              originalTransaction: transaction\n            },\n            chainId\n          });\n          setState({\n            status,\n            transaction: e.replacement,\n            originalTransaction: transaction,\n            receipt: e.receipt,\n            errorMessage,\n            errorCode,\n            errorHash,\n            chainId\n          });\n        } else {\n          setState({\n            status: 'Fail',\n            transaction,\n            receipt: e.receipt,\n            errorMessage,\n            errorCode,\n            errorHash,\n            chainId\n          });\n        }\n      } else {\n        setState({\n          status: 'Exception',\n          errorMessage,\n          errorCode,\n          errorHash,\n          chainId\n        });\n      }\n\n      return undefined;\n    }\n  }, [chainId, setState, addTransaction, options]);\n  return {\n    promiseTransaction,\n    state,\n    resetState\n  };\n}","map":{"version":3,"mappings":"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","names":["useCallback","useState","useNotificationsContext","useTransactionsContext","BigNumber","errors","estimateTransactionGasLimit","transactionRequest","signer","gasLimitBufferPercentage","undefined","estimatedGas","gasLimit","from","estimateGas","mul","div","err","console","error","estimateContractFunctionGasLimit","contractWithSigner","functionName","args","isDroppedAndReplaced","e","code","TRANSACTION_REPLACED","replacement","reason","cancelled","usePromiseTransaction","chainId","options","state","setState","status","addTransaction","addNotification","resetState","promiseTransaction","transactionPromise","transaction","submittedAt","Date","now","transactionName","receipt","wait","parsedErrorCode","parseInt","_a","data","_b","_c","_d","_e","_f","_g","errorCode","isNaN","errorHash","_h","_j","originalError","_k","_l","_m","errorMessage","_o","_p","message","_q","_r","_s","_t","_u","_v","droppedAndReplaced","type","notification","_w","originalTransaction"],"sources":["/Users/qianyisheng/Desktop/web3/brownie_test/web3_survey/front_end/node_modules/@usedapp/core/src/hooks/usePromiseTransaction.ts"],"sourcesContent":["import type { TransactionRequest, TransactionResponse } from '@ethersproject/abstract-provider'\nimport { useCallback, useState } from 'react'\nimport { useNotificationsContext, useTransactionsContext } from '../providers'\nimport { TransactionStatus, TransactionOptions, TransactionState } from '../model'\nimport { BigNumber, Contract, errors, Signer } from 'ethers'\n\n/**\n * @internal\n */\nexport async function estimateTransactionGasLimit(\n  transactionRequest: TransactionRequest | undefined,\n  signer: Signer | undefined,\n  gasLimitBufferPercentage: number\n) {\n  if (!signer || !transactionRequest) {\n    return undefined\n  }\n  try {\n    const estimatedGas = transactionRequest.gasLimit\n      ? BigNumber.from(transactionRequest.gasLimit)\n      : await signer.estimateGas(transactionRequest)\n    return estimatedGas?.mul(gasLimitBufferPercentage + 100).div(100)\n  } catch (err: any) {\n    console.error(err)\n    return undefined\n  }\n}\n\n/**\n * @internal\n */\nexport async function estimateContractFunctionGasLimit(\n  contractWithSigner: Contract,\n  functionName: string,\n  args: any[],\n  gasLimitBufferPercentage: number\n): Promise<BigNumber | undefined> {\n  try {\n    const estimatedGas = await contractWithSigner.estimateGas[functionName](...args)\n    const gasLimit = estimatedGas?.mul(gasLimitBufferPercentage + 100).div(100)\n    return gasLimit\n  } catch (err: any) {\n    console.error(err)\n    return undefined\n  }\n}\n\nconst isDroppedAndReplaced = (e: any) =>\n  e?.code === errors.TRANSACTION_REPLACED && e?.replacement && (e?.reason === 'repriced' || e?.cancelled === false)\n\nexport function usePromiseTransaction(chainId: number | undefined, options?: TransactionOptions) {\n  const [state, setState] = useState<TransactionStatus>({ status: 'None' })\n  const { addTransaction } = useTransactionsContext()\n  const { addNotification } = useNotificationsContext()\n\n  const resetState = useCallback(() => {\n    setState({ status: 'None' })\n  }, [setState])\n\n  const promiseTransaction = useCallback(\n    async (transactionPromise: Promise<TransactionResponse>) => {\n      if (!chainId) return\n      let transaction: TransactionResponse | undefined = undefined\n      try {\n        setState({ status: 'PendingSignature', chainId })\n\n        transaction = await transactionPromise\n\n        setState({ transaction, status: 'Mining', chainId })\n        addTransaction({\n          transaction: {\n            ...transaction,\n            chainId: chainId,\n          },\n          submittedAt: Date.now(),\n          transactionName: options?.transactionName,\n        })\n        const receipt = await transaction.wait()\n        setState({ receipt, transaction, status: 'Success', chainId })\n        return receipt\n      } catch (e: any) {\n        const parsedErrorCode = parseInt(e.error?.data?.code ?? e.error?.code ?? e.data?.code ?? e.code)\n        const errorCode = isNaN(parsedErrorCode) ? undefined : parsedErrorCode\n        const errorHash = e?.error?.data?.originalError?.data ?? e?.error?.data\n        const errorMessage = e.error?.data?.message ?? e.error?.message ?? e.reason ?? e.data?.message ?? e.message\n        if (transaction) {\n          const droppedAndReplaced = isDroppedAndReplaced(e)\n\n          if (droppedAndReplaced) {\n            const status: TransactionState = e.receipt.status === 0 ? 'Fail' : 'Success'\n            const type = status === 'Fail' ? 'transactionFailed' : 'transactionSucceed'\n\n            addNotification({\n              notification: {\n                type,\n                submittedAt: Date.now(),\n                transaction: e.replacement,\n                receipt: e.receipt,\n                transactionName: e.replacement?.transactionName,\n                originalTransaction: transaction,\n              },\n              chainId,\n            })\n\n            setState({\n              status,\n              transaction: e.replacement,\n              originalTransaction: transaction,\n              receipt: e.receipt,\n              errorMessage,\n              errorCode,\n              errorHash,\n              chainId,\n            })\n          } else {\n            setState({ status: 'Fail', transaction, receipt: e.receipt, errorMessage, errorCode, errorHash, chainId })\n          }\n        } else {\n          setState({ status: 'Exception', errorMessage, errorCode, errorHash, chainId })\n        }\n        return undefined\n      }\n    },\n    [chainId, setState, addTransaction, options]\n  )\n\n  return { promiseTransaction, state, resetState }\n}\n"]},"metadata":{},"sourceType":"module"}
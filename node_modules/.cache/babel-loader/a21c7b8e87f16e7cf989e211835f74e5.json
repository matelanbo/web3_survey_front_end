{"ast":null,"code":"import { createContext, useContext } from 'react';\nimport { ChainId } from '../../../constants';\nexport const NetworkContext = createContext({\n  network: {\n    provider: undefined,\n    chainId: ChainId.Mainnet,\n    accounts: [],\n    errors: []\n  },\n  update: () => undefined,\n  reportError: () => undefined,\n  activate: async () => undefined,\n  deactivate: () => undefined,\n  activateBrowserWallet: () => undefined,\n  isLoading: true\n});\n/**\n * @internal\n */\n\nexport function useNetwork() {\n  return useContext(NetworkContext);\n}","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAOA,OAAO,MAAMC,cAAc,GAAGH,aAAa,CAQxC;EACDI,OAAO,EAAE;IACPC,QAAQ,EAAEC,SADH;IAEPC,OAAO,EAAEL,OAAO,CAACM,OAFV;IAGPC,QAAQ,EAAE,EAHH;IAIPC,MAAM,EAAE;EAJD,CADR;EAODC,MAAM,EAAE,MAAML,SAPb;EAQDM,WAAW,EAAE,MAAMN,SARlB;EASDO,QAAQ,EAAE,YAAYP,SATrB;EAUDQ,UAAU,EAAE,MAAMR,SAVjB;EAWDS,qBAAqB,EAAE,MAAMT,SAX5B;EAYDU,SAAS,EAAE;AAZV,CARwC,CAApC;AAuBP;;;;AAGA,OAAM,SAAUC,UAAV,GAAoB;EACxB,OAAOhB,UAAU,CAACE,cAAD,CAAjB;AACD","names":["createContext","useContext","ChainId","NetworkContext","network","provider","undefined","chainId","Mainnet","accounts","errors","update","reportError","activate","deactivate","activateBrowserWallet","isLoading","useNetwork"],"sources":["/Users/qianyisheng/Desktop/web3/brownie_test/web3_survey/front_end/node_modules/@usedapp/core/src/providers/network/network/context.ts"],"sourcesContent":["import { createContext, useContext } from 'react'\nimport { ChainId } from '../../../constants'\nimport { Network } from './model'\nimport type { providers } from 'ethers'\n\ntype JsonRpcProvider = providers.JsonRpcProvider\ntype ExternalProvider = providers.ExternalProvider\n\nexport const NetworkContext = createContext<{\n  update: (network: Partial<Network>) => void\n  reportError: (error: Error) => void\n  activate: (provider: JsonRpcProvider | ExternalProvider) => Promise<void>\n  deactivate: () => void\n  network: Network\n  activateBrowserWallet: () => void\n  isLoading: boolean\n}>({\n  network: {\n    provider: undefined,\n    chainId: ChainId.Mainnet,\n    accounts: [],\n    errors: [],\n  },\n  update: () => undefined,\n  reportError: () => undefined,\n  activate: async () => undefined,\n  deactivate: () => undefined,\n  activateBrowserWallet: () => undefined,\n  isLoading: true,\n})\n\n/**\n * @internal\n */\nexport function useNetwork() {\n  return useContext(NetworkContext)\n}\n"]},"metadata":{},"sourceType":"module"}
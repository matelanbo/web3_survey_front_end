{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useEthers, useContractFunction } from \"@usedapp/core\";\nimport { constants, utils } from \"ethers\";\nimport MainRouter from \"../chain-info/contracts/MainRouter.json\";\nimport { Contract } from \"@ethersproject/contracts\";\nexport const useRewardsCheck = tokenAddress => {\n  _s();\n\n  // address\n  // abi\n  // chainId\n  const {\n    chainId\n  } = useEthers();\n  const {\n    abi\n  } = MainRouter;\n  const tokenFarmAddress = constants.AddressZero;\n  const tokenFarmInterface = new utils.Interface(abi);\n  const tokenFarmContract = new Contract(tokenFarmAddress, tokenFarmInterface);\n\n  const rewardsCheck = () => {\n    console.log(tokenFarmAddress);\n    const rewards = checkRewards();\n    console.log(\"Your rewards:\");\n    console.log(rewards);\n  }; // stake\n\n\n  const {\n    send: checkRewards,\n    state: rewardsCheckState\n  } = useContractFunction(tokenFarmContract, \"myRewards\", {\n    transactionName: \"Check Rewards\"\n  });\n  const [rewards, setRewards] = useState(stakeState);\n  return {\n    rewardsCheck,\n    rewards\n  };\n};\n\n_s(useRewardsCheck, \"nSrLgYC3j2NJ+htrXuH0kaVrU5s=\", false, function () {\n  return [useEthers, useContractFunction];\n});","map":{"version":3,"names":["useState","useEthers","useContractFunction","constants","utils","MainRouter","Contract","useRewardsCheck","tokenAddress","chainId","abi","tokenFarmAddress","AddressZero","tokenFarmInterface","Interface","tokenFarmContract","rewardsCheck","console","log","rewards","checkRewards","send","state","rewardsCheckState","transactionName","setRewards","stakeState"],"sources":["/Users/qianyisheng/Desktop/web3/brownie_test/brownie_fund_me/front_end/src/hooks/useRewardsCheck.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useEthers, useContractFunction } from \"@usedapp/core\"\nimport { constants, utils } from \"ethers\"\nimport MainRouter from \"../chain-info/contracts/MainRouter.json\"\nimport { Contract } from \"@ethersproject/contracts\"\n\nexport const useRewardsCheck = (tokenAddress: string) => {\n    // address\n    // abi\n    // chainId\n    const { chainId } = useEthers()\n    const { abi } = MainRouter\n    const tokenFarmAddress = constants.AddressZero\n    const tokenFarmInterface = new utils.Interface(abi)\n    const tokenFarmContract = new Contract(tokenFarmAddress, tokenFarmInterface)\n\n    const rewardsCheck = () => {\n        console.log(tokenFarmAddress)\n        const rewards = checkRewards()\n        console.log(\"Your rewards:\")\n        console.log(rewards)\n    }\n\n    // stake\n    const { send: checkRewards, state: rewardsCheckState } =\n        useContractFunction(tokenFarmContract, \"myRewards\", {\n            transactionName: \"Check Rewards\",\n        })\n\n    const [rewards, setRewards] = useState(stakeState)\n    return { rewardsCheck, rewards }\n\n}"],"mappings":";;AAAA,SAAoBA,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,mBAApB,QAA+C,eAA/C;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,QAAjC;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,OAAO,MAAMC,eAAe,GAAIC,YAAD,IAA0B;EAAA;;EACrD;EACA;EACA;EACA,MAAM;IAAEC;EAAF,IAAcR,SAAS,EAA7B;EACA,MAAM;IAAES;EAAF,IAAUL,UAAhB;EACA,MAAMM,gBAAgB,GAAGR,SAAS,CAACS,WAAnC;EACA,MAAMC,kBAAkB,GAAG,IAAIT,KAAK,CAACU,SAAV,CAAoBJ,GAApB,CAA3B;EACA,MAAMK,iBAAiB,GAAG,IAAIT,QAAJ,CAAaK,gBAAb,EAA+BE,kBAA/B,CAA1B;;EAEA,MAAMG,YAAY,GAAG,MAAM;IACvBC,OAAO,CAACC,GAAR,CAAYP,gBAAZ;IACA,MAAMQ,OAAO,GAAGC,YAAY,EAA5B;IACAH,OAAO,CAACC,GAAR,CAAY,eAAZ;IACAD,OAAO,CAACC,GAAR,CAAYC,OAAZ;EACH,CALD,CAVqD,CAiBrD;;;EACA,MAAM;IAAEE,IAAI,EAAED,YAAR;IAAsBE,KAAK,EAAEC;EAA7B,IACFrB,mBAAmB,CAACa,iBAAD,EAAoB,WAApB,EAAiC;IAChDS,eAAe,EAAE;EAD+B,CAAjC,CADvB;EAKA,MAAM,CAACL,OAAD,EAAUM,UAAV,IAAwBzB,QAAQ,CAAC0B,UAAD,CAAtC;EACA,OAAO;IAAEV,YAAF;IAAgBG;EAAhB,CAAP;AAEH,CA1BM;;GAAMZ,e;UAIWN,S,EAehBC,mB"},"metadata":{},"sourceType":"module"}
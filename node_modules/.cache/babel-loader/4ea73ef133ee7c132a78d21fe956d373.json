{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useContractFunction } from \"@usedapp/core\";\nimport { utils } from \"ethers\";\nimport MainRouter from \"../chain-info/contracts/MainRouter.json\";\nimport { Contract } from \"@ethersproject/contracts\";\nexport const useClaimRewards = tokenAddress => {\n  _s();\n\n  // address\n  // abi\n  // chainId\n  const {\n    abi\n  } = MainRouter;\n  const tokenFarmAddress = \"0xfdbdcdaa565ac2fd517318e31f90dbfde9c76611\";\n  const tokenFarmInterface = new utils.Interface(abi);\n  const tokenFarmContract = new Contract(tokenFarmAddress, tokenFarmInterface);\n\n  const claimRewards = () => {\n    return claim();\n  }; // stake\n\n\n  const {\n    send: claim,\n    state: claimState\n  } = useContractFunction(tokenFarmContract, \"claimRewards\", {\n    transactionName: \"Claim Rewards\"\n  }); //useEffect\n\n  const [state, setState] = useState(claimState); // useEffect(() => {\n  //     stakeSend(amountToStake)\n  // }, [amountToStake])\n\n  return {\n    claimRewards,\n    state\n  };\n};\n\n_s(useClaimRewards, \"FkviGmMM4hdUmFLRUlh84tTC6CI=\", false, function () {\n  return [useContractFunction];\n});","map":{"version":3,"names":["useState","useContractFunction","utils","MainRouter","Contract","useClaimRewards","tokenAddress","abi","tokenFarmAddress","tokenFarmInterface","Interface","tokenFarmContract","claimRewards","claim","send","state","claimState","transactionName","setState"],"sources":["/Users/qianyisheng/Desktop/web3/brownie_test/brownie_fund_me/front_end/src/hooks/useClaimRewards.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useEthers, useContractFunction } from \"@usedapp/core\"\nimport { constants, utils } from \"ethers\"\nimport MainRouter from \"../chain-info/contracts/MainRouter.json\"\nimport { Contract } from \"@ethersproject/contracts\"\n\nexport const useClaimRewards = (tokenAddress: string) => {\n    // address\n    // abi\n    // chainId\n    const { abi } = MainRouter\n    const tokenFarmAddress = \"0xfdbdcdaa565ac2fd517318e31f90dbfde9c76611\"\n    const tokenFarmInterface = new utils.Interface(abi)\n    const tokenFarmContract = new Contract(tokenFarmAddress, tokenFarmInterface)\n\n    const claimRewards = () => {\n        return claim()\n    }\n\n    // stake\n    const { send: claim, state: claimState } =\n        useContractFunction(tokenFarmContract, \"claimRewards\", {\n            transactionName: \"Claim Rewards\",\n        })\n\n    //useEffect\n    const [state, setState] = useState(claimState)\n    // useEffect(() => {\n    //     stakeSend(amountToStake)\n    // }, [amountToStake])\n\n\n    return { claimRewards, state }\n}"],"mappings":";;AAAA,SAAoBA,QAApB,QAAoC,OAApC;AACA,SAAoBC,mBAApB,QAA+C,eAA/C;AACA,SAAoBC,KAApB,QAAiC,QAAjC;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,OAAO,MAAMC,eAAe,GAAIC,YAAD,IAA0B;EAAA;;EACrD;EACA;EACA;EACA,MAAM;IAAEC;EAAF,IAAUJ,UAAhB;EACA,MAAMK,gBAAgB,GAAG,4CAAzB;EACA,MAAMC,kBAAkB,GAAG,IAAIP,KAAK,CAACQ,SAAV,CAAoBH,GAApB,CAA3B;EACA,MAAMI,iBAAiB,GAAG,IAAIP,QAAJ,CAAaI,gBAAb,EAA+BC,kBAA/B,CAA1B;;EAEA,MAAMG,YAAY,GAAG,MAAM;IACvB,OAAOC,KAAK,EAAZ;EACH,CAFD,CATqD,CAarD;;;EACA,MAAM;IAAEC,IAAI,EAAED,KAAR;IAAeE,KAAK,EAAEC;EAAtB,IACFf,mBAAmB,CAACU,iBAAD,EAAoB,cAApB,EAAoC;IACnDM,eAAe,EAAE;EADkC,CAApC,CADvB,CAdqD,CAmBrD;;EACA,MAAM,CAACF,KAAD,EAAQG,QAAR,IAAoBlB,QAAQ,CAACgB,UAAD,CAAlC,CApBqD,CAqBrD;EACA;EACA;;EAGA,OAAO;IAAEJ,YAAF;IAAgBG;EAAhB,CAAP;AACH,CA3BM;;GAAMV,e;UAeLJ,mB"},"metadata":{},"sourceType":"module"}
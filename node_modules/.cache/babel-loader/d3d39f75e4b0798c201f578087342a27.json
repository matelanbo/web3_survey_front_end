{"ast":null,"code":"import { useContext } from 'react';\nimport { getChainById } from '../helpers';\nimport { ConfigContext } from '../providers';\n\nconst validConfigs = configs => {\n  if (!(configs === null || configs === void 0 ? void 0 : configs.networks) || (configs === null || configs === void 0 ? void 0 : configs.networks.length) === 0) {\n    console.warn('No networks or supportedChain configured');\n  }\n\n  return configs;\n};\n/**\n * Returns singleton instance of {@link Config}.\n * Takes no parameters.\n * @public\n */\n\n\nexport function useConfig() {\n  var _a;\n\n  const {\n    config\n  } = useContext(ConfigContext); // backward compatible with supportedChains\n\n  if (config.supportedChains) {\n    console.warn('supportedChain is deprecated, please pass networks instead');\n    const networks = (_a = config.supportedChains) === null || _a === void 0 ? void 0 : _a.map(chainId => getChainById(chainId));\n    return validConfigs(Object.assign(Object.assign({}, config), {\n      networks\n    }));\n  }\n\n  return validConfigs(config);\n}\n/**\n * @public\n */\n\nexport function useUpdateConfig() {\n  const {\n    updateConfig\n  } = useContext(ConfigContext);\n  return updateConfig;\n}","map":{"version":3,"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,aAAT,QAA8B,cAA9B;;AAEA,MAAMC,YAAY,GAAIC,OAAD,IAA4D;EAC/E,IAAI,EAACA,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEC,QAAV,KAAsB,QAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEA,QAAT,CAAkBC,MAAlB,MAA6B,CAAvD,EAA0D;IACxDC,OAAO,CAACC,IAAR,CAAa,0CAAb;EACD;;EACD,OAAOJ,OAAP;AACD,CALD;AAOA;;;;;;;AAKA,OAAM,SAAUK,SAAV,GAAmB;;;EACvB,MAAM;IAAEC;EAAF,IAAaV,UAAU,CAACE,aAAD,CAA7B,CADuB,CAGvB;;EACA,IAAIQ,MAAM,CAACC,eAAX,EAA4B;IAC1BJ,OAAO,CAACC,IAAR,CAAa,4DAAb;IACA,MAAMH,QAAQ,GAAY,YAAM,CAACM,eAAP,MAAsB,IAAtB,IAAsBC,aAAtB,GAAsB,MAAtB,GAAsBA,GAAEC,GAAF,CAAOC,OAAD,IAAab,YAAY,CAACa,OAAD,CAA/B,CAAhD;IACA,OAAOX,YAAY,iCACdO,MADc,GACR;MACTL;IADS,CADQ,EAAnB;EAID;;EAED,OAAOF,YAAY,CAACO,MAAD,CAAnB;AACD;AAED;;;;AAGA,OAAM,SAAUK,eAAV,GAAyB;EAC7B,MAAM;IAAEC;EAAF,IAAmBhB,UAAU,CAACE,aAAD,CAAnC;EACA,OAAOc,YAAP;AACD","names":["useContext","getChainById","ConfigContext","validConfigs","configs","networks","length","console","warn","useConfig","config","supportedChains","_a","map","chainId","useUpdateConfig","updateConfig"],"sources":["/Users/qianyisheng/Desktop/web3/brownie_test/web3_survey/front_end/node_modules/@usedapp/core/src/hooks/useConfig.ts"],"sourcesContent":["import { useContext } from 'react'\nimport { Chain, FullConfig } from '../constants'\nimport { getChainById } from '../helpers'\nimport { ConfigContext } from '../providers'\n\nconst validConfigs = (configs: FullConfig): FullConfig | Record<string, never> => {\n  if (!configs?.networks || configs?.networks.length === 0) {\n    console.warn('No networks or supportedChain configured')\n  }\n  return configs\n}\n\n/**\n * Returns singleton instance of {@link Config}.\n * Takes no parameters.\n * @public\n */\nexport function useConfig() {\n  const { config } = useContext(ConfigContext)\n\n  // backward compatible with supportedChains\n  if (config.supportedChains) {\n    console.warn('supportedChain is deprecated, please pass networks instead')\n    const networks: Chain[] = config.supportedChains?.map((chainId) => getChainById(chainId)) as Chain[]\n    return validConfigs({\n      ...config,\n      networks,\n    })\n  }\n\n  return validConfigs(config)\n}\n\n/**\n * @public\n */\nexport function useUpdateConfig() {\n  const { updateConfig } = useContext(ConfigContext)\n  return updateConfig\n}\n"]},"metadata":{},"sourceType":"module"}
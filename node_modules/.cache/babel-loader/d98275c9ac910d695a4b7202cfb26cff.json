{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState, useEffect } from 'react';\nimport { WindowContext } from './context';\n/**\n * @internal Intended for internal use - use it on your own risk\n */\n\nexport function WindowProvider(_ref) {\n  let {\n    children\n  } = _ref;\n  const [isActiveWindow, setActiveWindow] = useState(true);\n  useEffect(() => {\n    const visibilityChangeListener = () => {\n      switch (document.visibilityState) {\n        case 'hidden':\n          setActiveWindow(false);\n          break;\n\n        case 'visible':\n          setActiveWindow(true);\n          break;\n      }\n    };\n\n    document.addEventListener('visibilitychange', visibilityChangeListener);\n    return () => document.removeEventListener('visibilitychange', visibilityChangeListener);\n  }, []);\n  return _jsx(WindowContext.Provider, {\n    value: {\n      isActive: isActiveWindow\n    },\n    children: children\n  });\n}","map":{"version":3,"mappings":";AAAA,SAAoBA,QAApB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,SAASC,aAAT,QAA8B,WAA9B;AAMA;;;;AAGA,OAAM,SAAUC,cAAV,OAA4C;EAAA,IAAnB;IAAEC;EAAF,CAAmB;EAChD,MAAM,CAACC,cAAD,EAAiBC,eAAjB,IAAoCN,QAAQ,CAAC,IAAD,CAAlD;EAEAC,SAAS,CAAC,MAAK;IACb,MAAMM,wBAAwB,GAAG,MAAK;MACpC,QAAQC,QAAQ,CAACC,eAAjB;QACE,KAAK,QAAL;UACEH,eAAe,CAAC,KAAD,CAAf;UACA;;QACF,KAAK,SAAL;UACEA,eAAe,CAAC,IAAD,CAAf;UACA;MANJ;IAQD,CATD;;IAUAE,QAAQ,CAACE,gBAAT,CAA0B,kBAA1B,EAA8CH,wBAA9C;IACA,OAAO,MAAMC,QAAQ,CAACG,mBAAT,CAA6B,kBAA7B,EAAiDJ,wBAAjD,CAAb;EACD,CAbQ,EAaN,EAbM,CAAT;EAeA,OAAOK,KAACV,aAAa,CAACW,QAAf,EAAuB;IAACC,KAAK,EAAE;MAAEC,QAAQ,EAAEV;IAAZ,CAAR;IAAsCD,QAAQ,EAAEA;EAAhD,CAAvB,CAAP;AACD","names":["useState","useEffect","WindowContext","WindowProvider","children","isActiveWindow","setActiveWindow","visibilityChangeListener","document","visibilityState","addEventListener","removeEventListener","_jsx","Provider","value","isActive"],"sources":["/Users/qianyisheng/Desktop/web3/brownie_test/brownie_fund_me/front_end/node_modules/@usedapp/core/src/providers/window/provider.tsx"],"sourcesContent":["import { ReactNode, useState, useEffect } from 'react'\nimport { WindowContext } from './context'\n\ninterface Props {\n  children: ReactNode\n}\n\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function WindowProvider({ children }: Props) {\n  const [isActiveWindow, setActiveWindow] = useState(true)\n\n  useEffect(() => {\n    const visibilityChangeListener = () => {\n      switch (document.visibilityState) {\n        case 'hidden':\n          setActiveWindow(false)\n          break\n        case 'visible':\n          setActiveWindow(true)\n          break\n      }\n    }\n    document.addEventListener('visibilitychange', visibilityChangeListener)\n    return () => document.removeEventListener('visibilitychange', visibilityChangeListener)\n  }, [])\n\n  return <WindowContext.Provider value={{ isActive: isActiveWindow }} children={children} />\n}\n"]},"metadata":{},"sourceType":"module"}
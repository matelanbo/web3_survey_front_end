{"ast":null,"code":"import { getAddressLink, getTransactionLink } from '../../helpers/chainExplorerLink';\nconst etherscanUrl = 'https://etherscan.io';\nconst ropstenEtherscanUrl = 'https://ropsten.etherscan.io';\nconst rinkebyEtherscanUrl = 'https://rinkeby.etherscan.io';\nconst goerliEtherscanUrl = 'https://goerli.etherscan.io';\nconst kovanEtherscanUrl = 'https://kovan.etherscan.io';\nexport const Mainnet = {\n  chainId: 1,\n  chainName: 'Mainnet',\n  isTestChain: false,\n  isLocalChain: false,\n  multicallAddress: '0xeefba1e63905ef1d7acba5a8513c70307c1ce441',\n  multicall2Address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696',\n  blockExplorerUrl: etherscanUrl,\n  getExplorerAddressLink: getAddressLink(etherscanUrl),\n  getExplorerTransactionLink: getTransactionLink(etherscanUrl)\n};\nexport const Ropsten = {\n  chainId: 3,\n  chainName: 'Ropsten',\n  isTestChain: true,\n  isLocalChain: false,\n  multicallAddress: '0x53c43764255c17bd724f74c4ef150724ac50a3ed',\n  multicall2Address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696',\n  blockExplorerUrl: ropstenEtherscanUrl,\n  getExplorerAddressLink: getAddressLink(ropstenEtherscanUrl),\n  getExplorerTransactionLink: getTransactionLink(ropstenEtherscanUrl)\n};\nexport const Rinkeby = {\n  chainId: 4,\n  chainName: 'Rinkeby',\n  isTestChain: true,\n  isLocalChain: false,\n  multicallAddress: '0x42ad527de7d4e9d9d011ac45b31d8551f8fe9821',\n  multicall2Address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696',\n  blockExplorerUrl: rinkebyEtherscanUrl,\n  getExplorerAddressLink: getAddressLink(rinkebyEtherscanUrl),\n  getExplorerTransactionLink: getTransactionLink(rinkebyEtherscanUrl)\n};\nexport const Goerli = {\n  chainId: 5,\n  chainName: 'Goerli',\n  isTestChain: true,\n  isLocalChain: false,\n  multicallAddress: '0x77dca2c955b15e9de4dbbcf1246b4b85b651e50e',\n  multicall2Address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696',\n  blockExplorerUrl: goerliEtherscanUrl,\n  getExplorerAddressLink: getAddressLink(goerliEtherscanUrl),\n  getExplorerTransactionLink: getTransactionLink(goerliEtherscanUrl)\n};\nexport const Kovan = {\n  chainId: 42,\n  chainName: 'Kovan',\n  isTestChain: true,\n  isLocalChain: false,\n  multicallAddress: '0x2cc8688c5f75e365aaeeb4ea8d6a480405a48d2a',\n  multicall2Address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696',\n  blockExplorerUrl: kovanEtherscanUrl,\n  getExplorerAddressLink: getAddressLink(kovanEtherscanUrl),\n  getExplorerTransactionLink: getTransactionLink(kovanEtherscanUrl)\n};\nexport default {\n  Mainnet,\n  Ropsten,\n  Rinkeby,\n  Goerli,\n  Kovan\n};","map":{"version":3,"mappings":"AACA,SAASA,cAAT,EAAyBC,kBAAzB,QAAmD,iCAAnD;AAEA,MAAMC,YAAY,GAAG,sBAArB;AACA,MAAMC,mBAAmB,GAAG,8BAA5B;AACA,MAAMC,mBAAmB,GAAG,8BAA5B;AACA,MAAMC,kBAAkB,GAAG,6BAA3B;AACA,MAAMC,iBAAiB,GAAG,4BAA1B;AAEA,OAAO,MAAMC,OAAO,GAAU;EAC5BC,OAAO,EAAE,CADmB;EAE5BC,SAAS,EAAE,SAFiB;EAG5BC,WAAW,EAAE,KAHe;EAI5BC,YAAY,EAAE,KAJc;EAK5BC,gBAAgB,EAAE,4CALU;EAM5BC,iBAAiB,EAAE,4CANS;EAO5BC,gBAAgB,EAAEZ,YAPU;EAQ5Ba,sBAAsB,EAAEf,cAAc,CAACE,YAAD,CARV;EAS5Bc,0BAA0B,EAAEf,kBAAkB,CAACC,YAAD;AATlB,CAAvB;AAYP,OAAO,MAAMe,OAAO,GAAU;EAC5BT,OAAO,EAAE,CADmB;EAE5BC,SAAS,EAAE,SAFiB;EAG5BC,WAAW,EAAE,IAHe;EAI5BC,YAAY,EAAE,KAJc;EAK5BC,gBAAgB,EAAE,4CALU;EAM5BC,iBAAiB,EAAE,4CANS;EAO5BC,gBAAgB,EAAEX,mBAPU;EAQ5BY,sBAAsB,EAAEf,cAAc,CAACG,mBAAD,CARV;EAS5Ba,0BAA0B,EAAEf,kBAAkB,CAACE,mBAAD;AATlB,CAAvB;AAYP,OAAO,MAAMe,OAAO,GAAU;EAC5BV,OAAO,EAAE,CADmB;EAE5BC,SAAS,EAAE,SAFiB;EAG5BC,WAAW,EAAE,IAHe;EAI5BC,YAAY,EAAE,KAJc;EAK5BC,gBAAgB,EAAE,4CALU;EAM5BC,iBAAiB,EAAE,4CANS;EAO5BC,gBAAgB,EAAEV,mBAPU;EAQ5BW,sBAAsB,EAAEf,cAAc,CAACI,mBAAD,CARV;EAS5BY,0BAA0B,EAAEf,kBAAkB,CAACG,mBAAD;AATlB,CAAvB;AAYP,OAAO,MAAMe,MAAM,GAAU;EAC3BX,OAAO,EAAE,CADkB;EAE3BC,SAAS,EAAE,QAFgB;EAG3BC,WAAW,EAAE,IAHc;EAI3BC,YAAY,EAAE,KAJa;EAK3BC,gBAAgB,EAAE,4CALS;EAM3BC,iBAAiB,EAAE,4CANQ;EAO3BC,gBAAgB,EAAET,kBAPS;EAQ3BU,sBAAsB,EAAEf,cAAc,CAACK,kBAAD,CARX;EAS3BW,0BAA0B,EAAEf,kBAAkB,CAACI,kBAAD;AATnB,CAAtB;AAYP,OAAO,MAAMe,KAAK,GAAU;EAC1BZ,OAAO,EAAE,EADiB;EAE1BC,SAAS,EAAE,OAFe;EAG1BC,WAAW,EAAE,IAHa;EAI1BC,YAAY,EAAE,KAJY;EAK1BC,gBAAgB,EAAE,4CALQ;EAM1BC,iBAAiB,EAAE,4CANO;EAO1BC,gBAAgB,EAAER,iBAPQ;EAQ1BS,sBAAsB,EAAEf,cAAc,CAACM,iBAAD,CARZ;EAS1BU,0BAA0B,EAAEf,kBAAkB,CAACK,iBAAD;AATpB,CAArB;AAYP,eAAe;EACbC,OADa;EAEbU,OAFa;EAGbC,OAHa;EAIbC,MAJa;EAKbC;AALa,CAAf","names":["getAddressLink","getTransactionLink","etherscanUrl","ropstenEtherscanUrl","rinkebyEtherscanUrl","goerliEtherscanUrl","kovanEtherscanUrl","Mainnet","chainId","chainName","isTestChain","isLocalChain","multicallAddress","multicall2Address","blockExplorerUrl","getExplorerAddressLink","getExplorerTransactionLink","Ropsten","Rinkeby","Goerli","Kovan"],"sources":["/Users/qianyisheng/Desktop/web3/brownie_test/brownie_fund_me/front_end/node_modules/@usedapp/core/src/model/chain/ethereum.ts"],"sourcesContent":["import { Chain } from '../../constants'\nimport { getAddressLink, getTransactionLink } from '../../helpers/chainExplorerLink'\n\nconst etherscanUrl = 'https://etherscan.io'\nconst ropstenEtherscanUrl = 'https://ropsten.etherscan.io'\nconst rinkebyEtherscanUrl = 'https://rinkeby.etherscan.io'\nconst goerliEtherscanUrl = 'https://goerli.etherscan.io'\nconst kovanEtherscanUrl = 'https://kovan.etherscan.io'\n\nexport const Mainnet: Chain = {\n  chainId: 1,\n  chainName: 'Mainnet',\n  isTestChain: false,\n  isLocalChain: false,\n  multicallAddress: '0xeefba1e63905ef1d7acba5a8513c70307c1ce441',\n  multicall2Address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696',\n  blockExplorerUrl: etherscanUrl,\n  getExplorerAddressLink: getAddressLink(etherscanUrl),\n  getExplorerTransactionLink: getTransactionLink(etherscanUrl),\n}\n\nexport const Ropsten: Chain = {\n  chainId: 3,\n  chainName: 'Ropsten',\n  isTestChain: true,\n  isLocalChain: false,\n  multicallAddress: '0x53c43764255c17bd724f74c4ef150724ac50a3ed',\n  multicall2Address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696',\n  blockExplorerUrl: ropstenEtherscanUrl,\n  getExplorerAddressLink: getAddressLink(ropstenEtherscanUrl),\n  getExplorerTransactionLink: getTransactionLink(ropstenEtherscanUrl),\n}\n\nexport const Rinkeby: Chain = {\n  chainId: 4,\n  chainName: 'Rinkeby',\n  isTestChain: true,\n  isLocalChain: false,\n  multicallAddress: '0x42ad527de7d4e9d9d011ac45b31d8551f8fe9821',\n  multicall2Address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696',\n  blockExplorerUrl: rinkebyEtherscanUrl,\n  getExplorerAddressLink: getAddressLink(rinkebyEtherscanUrl),\n  getExplorerTransactionLink: getTransactionLink(rinkebyEtherscanUrl),\n}\n\nexport const Goerli: Chain = {\n  chainId: 5,\n  chainName: 'Goerli',\n  isTestChain: true,\n  isLocalChain: false,\n  multicallAddress: '0x77dca2c955b15e9de4dbbcf1246b4b85b651e50e',\n  multicall2Address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696',\n  blockExplorerUrl: goerliEtherscanUrl,\n  getExplorerAddressLink: getAddressLink(goerliEtherscanUrl),\n  getExplorerTransactionLink: getTransactionLink(goerliEtherscanUrl),\n}\n\nexport const Kovan: Chain = {\n  chainId: 42,\n  chainName: 'Kovan',\n  isTestChain: true,\n  isLocalChain: false,\n  multicallAddress: '0x2cc8688c5f75e365aaeeb4ea8d6a480405a48d2a',\n  multicall2Address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696',\n  blockExplorerUrl: kovanEtherscanUrl,\n  getExplorerAddressLink: getAddressLink(kovanEtherscanUrl),\n  getExplorerTransactionLink: getTransactionLink(kovanEtherscanUrl),\n}\n\nexport default {\n  Mainnet,\n  Ropsten,\n  Rinkeby,\n  Goerli,\n  Kovan,\n}\n"]},"metadata":{},"sourceType":"module"}